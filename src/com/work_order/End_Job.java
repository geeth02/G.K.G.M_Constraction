/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.work_order;

import com.main.Main_Menu;
import common.CommonM;
import common.DB;
import common.SystemData;
import java.awt.Color;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.Savepoint;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author geeth
 */
public class End_Job extends javax.swing.JFrame {

    /**
     * Creates new form End_Job
     */
    public End_Job() {
        initComponents();
        frameSetting();
        CommonM.setFullScreen(this);
        
       

    }
    int row;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        ReForm = new javax.swing.JLayeredPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        comboSearch = new javax.swing.JComboBox<>();
        txtOrderId = new javax.swing.JTextField();
        lbFirstName = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtVehicleNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCustomer = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCustomerPayment = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEndMeter = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtWpoint = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtEmployeeId = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtDAmount = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtCostName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        tb4 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtTotalCost = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtIncome = new javax.swing.JTextField();
        txtNetAmount = new javax.swing.JTextField();
        btnRegister4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbGKG = new javax.swing.JLabel();
        lbCons = new javax.swing.JLabel();
        btnDashboard = new javax.swing.JButton();
        memberTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setResizable(false);

        jLayeredPane1.setMinimumSize(new java.awt.Dimension(1920, 1080));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ReForm.setBackground(new java.awt.Color(240, 240, 240));
        ReForm.setOpaque(true);
        ReForm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 310, 120));

        comboSearch.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NIC Number", "Customer Name" }));
        jPanel3.add(comboSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, -1, 40));

        txtOrderId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtOrderId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtOrderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderIdActionPerformed(evt);
            }
        });
        txtOrderId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOrderIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOrderIdKeyTyped(evt);
            }
        });
        jPanel3.add(txtOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, 308, 43));

        lbFirstName.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        lbFirstName.setText("Search By");
        jPanel3.add(lbFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 170, 42));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel9.setText("Vehicle Number");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 175, 42));

        txtVehicleNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtVehicleNumber.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtVehicleNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVehicleNumberActionPerformed(evt);
            }
        });
        jPanel3.add(txtVehicleNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 480, 40));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel10.setText("Customer");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 175, 42));

        txtCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCustomer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerActionPerformed(evt);
            }
        });
        jPanel3.add(txtCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 480, 40));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel7.setText("Customer Payment");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, 40));

        txtCustomerPayment.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtCustomerPayment.setForeground(new java.awt.Color(0, 204, 0));
        txtCustomerPayment.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCustomerPayment.setVerifyInputWhenFocusTarget(false);
        txtCustomerPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerPaymentActionPerformed(evt);
            }
        });
        txtCustomerPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCustomerPaymentKeyTyped(evt);
            }
        });
        jPanel3.add(txtCustomerPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 480, 43));

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel11.setText("End Meter");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 175, 42));

        txtEndMeter.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtEndMeter.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtEndMeter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEndMeterActionPerformed(evt);
            }
        });
        txtEndMeter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEndMeterKeyPressed(evt);
            }
        });
        jPanel3.add(txtEndMeter, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 480, 40));

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel14.setText("Working Point");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 170, 40));

        txtWpoint.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtWpoint.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtWpoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWpointActionPerformed(evt);
            }
        });
        jPanel3.add(txtWpoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, 480, 40));

        ReForm.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 760, 420));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setPreferredSize(new java.awt.Dimension(780, 390));

        jLabel18.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel18.setText("Employee Id");

        txtEmployeeId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtEmployeeId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtEmployeeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmployeeIdActionPerformed(evt);
            }
        });

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee Id", "NIC Number", "Name", "Salary"
            }
        ));
        tb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tb1MousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(tb1);

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel15.setText("Drivers");

        jLabel21.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel21.setText("Amount");

        txtDAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtDAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDAmountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtDAmount, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmployeeId, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeId, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        ReForm.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 20, 780, 420));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel16.setText("Cost Name");

        txtCostName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCostName.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCostName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCostNameActionPerformed(evt);
            }
        });
        txtCostName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCostNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCostNameKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel17.setText("Amount");

        txtAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });

        tb4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cost Name", "Amount"
            }
        ));
        tb4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tb4MousePressed(evt);
            }
        });
        tb4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tb4KeyReleased(evt);
            }
        });
        jScrollPane8.setViewportView(tb4);

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel4.setText("Total Cost");

        txtTotalCost.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTotalCost.setForeground(new java.awt.Color(204, 0, 0));
        txtTotalCost.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtTotalCost.setVerifyInputWhenFocusTarget(false);
        txtTotalCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalCostActionPerformed(evt);
            }
        });
        txtTotalCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTotalCostKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCostName)
                    .addComponent(txtAmount)
                    .addComponent(jScrollPane8)
                    .addComponent(txtTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCostName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        ReForm.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 760, 390));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel3.setText("Total Bill Amount");

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel6.setText("Net Amount");

        txtIncome.setBackground(new java.awt.Color(255, 255, 102));
        txtIncome.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtIncome.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtIncome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIncomeMouseClicked(evt);
            }
        });
        txtIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIncomeActionPerformed(evt);
            }
        });
        txtIncome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIncomeKeyTyped(evt);
            }
        });

        txtNetAmount.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtNetAmount.setForeground(new java.awt.Color(204, 0, 0));
        txtNetAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtNetAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNetAmountActionPerformed(evt);
            }
        });
        txtNetAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNetAmountKeyTyped(evt);
            }
        });

        btnRegister4.setBackground(new java.awt.Color(0, 102, 204));
        btnRegister4.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 30)); // NOI18N
        btnRegister4.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister4.setText("End");
        btnRegister4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRegister4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegister4MouseExited(evt);
            }
        });
        btnRegister4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegister4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRegister4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(txtIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(btnRegister4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
        );

        ReForm.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 450, 780, 390));

        jLayeredPane1.add(ReForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 1660, 980));

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));

        jPanel2.setBackground(new java.awt.Color(204, 0, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbGKG.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lbGKG.setForeground(new java.awt.Color(255, 255, 255));
        lbGKG.setText("G.KG.M");
        lbGKG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbGKGMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbGKGMouseExited(evt);
            }
        });

        lbCons.setFont(new java.awt.Font("Tahoma", 1, 40)); // NOI18N
        lbCons.setForeground(new java.awt.Color(255, 255, 255));
        lbCons.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCons.setText("Construction");
        lbCons.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbConsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbConsMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lbGKG, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lbCons, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lbGKG, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbCons, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDashboard.setBackground(new java.awt.Color(0, 102, 204));
        btnDashboard.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 27)); // NOI18N
        btnDashboard.setForeground(new java.awt.Color(255, 255, 255));
        btnDashboard.setText("Back");
        btnDashboard.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnDashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDashboardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDashboardMouseExited(evt);
            }
        });
        btnDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDashboardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnDashboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(838, Short.MAX_VALUE))
        );

        jLayeredPane1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 1080));

        memberTitle.setBackground(new java.awt.Color(0, 102, 204));
        memberTitle.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 60)); // NOI18N
        memberTitle.setForeground(new java.awt.Color(255, 255, 255));
        memberTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        memberTitle.setText("End Work Order");
        memberTitle.setOpaque(true);
        jLayeredPane1.add(memberTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 0, 1660, 100));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtVehicleNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVehicleNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVehicleNumberActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        dataAdd();
        costCalculate();

    }//GEN-LAST:event_txtAmountActionPerformed

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountKeyTyped

    private void tb1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb1MousePressed

    }//GEN-LAST:event_tb1MousePressed

    private void txtAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyReleased
//            if(evt.getKeyCode()==107){
//     txtAmount.setText("");
//     new Add_Cost().setVisible(true);
//    dialogBoxMeker();
//     
//     }
    }//GEN-LAST:event_txtAmountKeyReleased

    private void txtOrderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderIdActionPerformed

    private void txtOrderIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrderIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderIdKeyTyped

    private void txtIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIncomeActionPerformed
        calculateNAmount();
    }//GEN-LAST:event_txtIncomeActionPerformed

    private void txtIncomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIncomeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIncomeKeyTyped

    private void tb4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb4MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tb4MousePressed

    private void btnRegister4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister4MouseEntered

    private void btnRegister4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister4MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister4MouseExited

    private void btnRegister4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegister4ActionPerformed
        endOrder();
    }//GEN-LAST:event_btnRegister4ActionPerformed

    private void txtOrderIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrderIdKeyReleased
        searchOrder();
        if (evt.getKeyCode() == 40) {
            jList1.setSelectedIndex(0);
            jList1.grabFocus();
        }
        if(txtOrderId.getText().equals("")){
        clearCostFeald();
        clearFeald();
        }

    }//GEN-LAST:event_txtOrderIdKeyReleased

    private void txtTotalCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalCostActionPerformed

    }//GEN-LAST:event_txtTotalCostActionPerformed

    private void txtTotalCostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalCostKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalCostKeyTyped

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        try {
            if (evt.getClickCount() == 2) {
                jScrollPane1.setVisible(false);
                
                ResultSet search = DB.search("SELECT * FROM work_order WHERE status= 1 AND customer_id='" + jList1.getSelectedValue().split("-")[0] + "'");
                if (search.next()) {
                    searchDetails();
                    txtEndMeter.grabFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "This customer have not active job");
                    txtOrderId.setText("");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == 10) {
            try {
                jScrollPane1.setVisible(false);

                ResultSet search = DB.search("SELECT * FROM work_order WHERE status= 1 AND customer_id='" + jList1.getSelectedValue().split("-")[0] + "' or vehicle_id='" + jList1.getSelectedValue().split("-")[0] + "'");
                if (search.next()) {
                    searchDetails();
                    txtEndMeter.grabFocus();
                } else {
                    if (comboSearch.getSelectedItem().equals("NIC Number")) {
                        JOptionPane.showMessageDialog(this, "This customer have not active job");
                        txtOrderId.setText("");
                        txtOrderId.grabFocus();
                    } else {
                        JOptionPane.showMessageDialog(this, "This vehicle have not active job");
                        txtOrderId.setText("");
                        txtOrderId.grabFocus();
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void txtCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerActionPerformed

    private void txtCostNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostNameActionPerformed
        txtAmount.grabFocus();
    }//GEN-LAST:event_txtCostNameActionPerformed

    private void txtCostNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostNameKeyReleased

    private void txtCostNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostNameKeyTyped

    private void txtNetAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNetAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetAmountActionPerformed

    private void txtNetAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNetAmountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetAmountKeyTyped

    private void tb4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb4KeyReleased
        if (evt.getKeyCode() == 127) {
            int row = tb4.getSelectedRow();
            System.out.println(row);
            DefaultTableModel dtm = (DefaultTableModel) tb4.getModel();
            dtm.removeRow(row);
            costCalculate();
            txtCostName.grabFocus();

        }
    }//GEN-LAST:event_tb4KeyReleased

    private void txtCustomerPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerPaymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerPaymentActionPerformed

    private void txtCustomerPaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerPaymentKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerPaymentKeyTyped

    private void txtIncomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIncomeMouseClicked
        if (txtIncome.getText().equals("Enter Total Bill Amount")) {
            txtIncome.setText(null);
        }


    }//GEN-LAST:event_txtIncomeMouseClicked

    private void txtEndMeterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEndMeterActionPerformed
        try {
            ResultSet search = DB.search("SELECT * FROM work_order WHERE order_id='"+txtOrderId.getText()+"'");
              if(search.next()){
             int sMeter =search.getInt("start_meter");
             int endMeter=Integer.parseInt(txtEndMeter.getText());
             if(endMeter>sMeter){
             txtWpoint.setText(String.valueOf(endMeter-sMeter));
             txtDAmount.grabFocus();
              }else{
               JOptionPane.showMessageDialog(this, "Start meter is "+sMeter+" Please enter correct value", "Error", JOptionPane.ERROR_MESSAGE);
               txtEndMeter.grabFocus();
             }
              }
        } catch (Exception e) {
            e.printStackTrace();
        }
      
       
    }//GEN-LAST:event_txtEndMeterActionPerformed

    private void lbGKGMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbGKGMouseEntered
        lbGKG.setForeground(Color.YELLOW);
        lbCons.setForeground(Color.YELLOW);
    }//GEN-LAST:event_lbGKGMouseEntered

    private void lbGKGMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbGKGMouseExited
        lbGKG.setForeground(Color.WHITE);
        lbCons.setForeground(Color.WHITE);
    }//GEN-LAST:event_lbGKGMouseExited

    private void lbConsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbConsMouseEntered
        lbGKG.setForeground(Color.YELLOW);
        lbCons.setForeground(Color.YELLOW);
    }//GEN-LAST:event_lbConsMouseEntered

    private void lbConsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbConsMouseExited
        lbGKG.setForeground(Color.WHITE);
        lbCons.setForeground(Color.WHITE);
    }//GEN-LAST:event_lbConsMouseExited

    private void btnDashboardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDashboardMouseEntered
        CommonM.setBlue(btnDashboard);
    }//GEN-LAST:event_btnDashboardMouseEntered

    private void btnDashboardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDashboardMouseExited
        CommonM.setDefaultColor(btnDashboard);
    }//GEN-LAST:event_btnDashboardMouseExited

    private void btnDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDashboardActionPerformed
        new Work_Order().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnDashboardActionPerformed

    private void txtWpointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWpointActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWpointActionPerformed

    private void txtEmployeeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmployeeIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmployeeIdActionPerformed

    private void txtDAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDAmountActionPerformed
      salary();
      txtEmployeeId.setText(null);
    }//GEN-LAST:event_txtDAmountActionPerformed

    private void txtEndMeterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEndMeterKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEndMeterKeyPressed

    private void tb1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb1MouseClicked
       txtEmployeeId.setText(tb1.getValueAt(tb1.getSelectedRow(), 0).toString());
       txtDAmount.grabFocus();
      row= tb1.getSelectedRow();
    }//GEN-LAST:event_tb1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(End_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(End_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(End_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(End_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new End_Job().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane ReForm;
    private javax.swing.JButton btnDashboard;
    private javax.swing.JButton btnRegister4;
    public static javax.swing.JComboBox<String> comboSearch;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    public static javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lbCons;
    private javax.swing.JLabel lbFirstName;
    private javax.swing.JLabel lbGKG;
    private javax.swing.JLabel memberTitle;
    public static javax.swing.JTable tb1;
    private javax.swing.JTable tb4;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCostName;
    public static javax.swing.JTextField txtCustomer;
    public static javax.swing.JTextField txtCustomerPayment;
    public static javax.swing.JTextField txtDAmount;
    public static javax.swing.JTextField txtEmployeeId;
    public static javax.swing.JTextField txtEndMeter;
    private javax.swing.JTextField txtIncome;
    private javax.swing.JTextField txtNetAmount;
    public static javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtTotalCost;
    public static javax.swing.JTextField txtVehicleNumber;
    public static javax.swing.JTextField txtWpoint;
    // End of variables declaration//GEN-END:variables

    private void searchOrder() {
        try {
            if (!txtOrderId.getText().trim().equals("")) {
                if (comboSearch.getSelectedItem().equals("NIC Number")) {
                    ResultSet rs = DB.search("SELECT * FROM customer WHERE status=1 AND nic_number LIKE '" + txtOrderId.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane1.setVisible(false);
                    while (rs.next()) {
                        jScrollPane1.setVisible(true);
                        v.add(rs.getString("customer_id") + "-" + rs.getString("first_name") + " " + rs.getString("last_name"));
                        jList1.setListData(v);
                    }
                } else if (comboSearch.getSelectedItem().equals(("Customer Name"))) {
                    ResultSet rs = DB.search("SELECT * FROM customer WHERE status=1 AND first_name LIKE '" + txtOrderId.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane1.setVisible(false);
                    while (rs.next()) {
                        jScrollPane1.setVisible(true);
                        v.add(rs.getString("customer_id") + "-" + rs.getString("first_name") + " " + rs.getString("last_name"));
                    }
                    jList1.setListData(v);
                }
            } else {
                jScrollPane1.setVisible(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchDetails() {

        if (comboSearch.getSelectedItem().equals("NIC Number")) {
            searchNic();
        } else if (comboSearch.getSelectedItem().equals("Vehicle Number")) {
            searchVehicleN();
            loadPayments();
        }
        // jScrollPane2.setVisible(false);

    }

    private void searchNic() {
        try {
            String search = jList1.getSelectedValue().split("-")[0];
            int i = 0;
            ResultSet search1 = DB.search("SELECT * FROM work_order where customer_id='" + search + "' AND status=1");
            while (search1.next()) {
                i++;
            }
            if (i == 1) {

                ResultSet search3 = DB.search("SELECT * FROM work_order where customer_id='" + search + "' AND status=1");
                if (search3.next()) {
                    txtOrderId.setText(search3.getString("order_id"));
                    ResultSet search4 = DB.search("SELECT * FROM vehicle where vehicle_id='" + search3.getString("vehicle_id") + "' AND status=1");
                    if (search4.next()) {
                        txtVehicleNumber.setText(search4.getString("province") + " " + search4.getString("registration_number"));
                    }
                    ResultSet search7 = DB.search("SELECT * FROM customer where customer_id='" + search3.getString("customer_id") + "' AND status=1");
                    if (search7.next()) {
                        txtCustomer.setText(search7.getString("customer_id") + "-" + search7.getString("first_name") + " " + search7.getString("last_name"));
                    }

                    ResultSet search5 = DB.search("SELECT * FROM employee_job where order_id='" + search3.getString("order_id") + "' AND status=1");
                    DefaultTableModel dtm = (DefaultTableModel) tb1.getModel();
                    dtm.setRowCount(0);
                    while (search5.next()) {
                        Vector v = new Vector();
                        ResultSet search6 = DB.search("SELECT * FROM employee where employee_id='" + search5.getString("employee_id") + "'");
                        while (search6.next()) {
                            v.add(search6.getString("employee_id"));
                            v.add(search6.getString("nic_number"));
                            v.add(search6.getString("first_name") + " " + search6.getString("last_name"));
                            v.add("Pending");
                            dtm.addRow(v);
                        }
                    }
                    jScrollPane1.setVisible(false);
                }
                loadPayments();
            } else if (i > 1) {
                new Job_Selection().setVisible(true);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchVehicleN() {
        try {
            String id = jList1.getSelectedValue().split("-")[0];
            ResultSet search2 = DB.search("SELECT * FROM work_order WHERE vehicle_id='" + id + "'");
            ResultSet search3 = DB.search("SELECT * FROM work_order where vehicle_id='" + id + "' AND status=1");
            if (search3.next()) {
                txtOrderId.setText(search3.getString("order_id"));
                ResultSet search4 = DB.search("SELECT * FROM vehicle where vehicle_id='" + search3.getString("vehicle_id") + "' AND status=1");
                if (search4.next()) {
                    txtVehicleNumber.setText(search4.getString("province") + " " + search4.getString("registration_number"));
                }
                ResultSet search7 = DB.search("SELECT * FROM customer where customer_id='" + search3.getString("customer_id") + "' AND status=1");
                if (search7.next()) {
                    txtCustomer.setText(search7.getString("customer_id") + "-" + search7.getString("first_name") + " " + search7.getString("last_name"));
                }

                ResultSet search5 = DB.search("SELECT * FROM employee_job where order_id='" + search3.getString("order_id") + "' AND status=1");
                DefaultTableModel dtm = (DefaultTableModel) tb1.getModel();
                dtm.setRowCount(0);
                while (search5.next()) {
                    Vector v = new Vector();
                    ResultSet search6 = DB.search("SELECT * FROM employee where employee_id='" + search5.getString("employee_id") + "'");
                    while (search6.next()) {
                        v.add(search6.getString("employee_id"));
                        v.add(search6.getString("nic_number"));
                        v.add(search6.getString("first_name") + " " + search6.getString("last_name"));
                        v.add("Pending");
                        dtm.addRow(v);
                    }
                }
                jScrollPane1.setVisible(false);
            }

        } catch (Exception e) {
        }
    }

    private void dataAdd() {
        DefaultTableModel dtm = (DefaultTableModel) tb4.getModel();
        Vector v = new Vector();
        v.add(txtCostName.getText().toUpperCase());
        v.add(txtAmount.getText());
        dtm.addRow(v);
        clearCostFeald();
    }

    private void clearCostFeald() {
        txtAmount.setText(null);
        txtCostName.setText(null);
        txtCostName.grabFocus();

    }

    private void costCalculate() {
        double amount = 0;
        for (int row = 0; row < tb4.getRowCount(); row++) {
            String amount1 = tb4.getValueAt(row, 1).toString().trim();
            double amount2 = Double.parseDouble(amount1);
            amount = amount + amount2;

            System.out.println(amount);
        }
        String setValue = String.valueOf(amount);
        BigDecimal bd = new BigDecimal(setValue);
        DecimalFormat formatterBd = new DecimalFormat("##.00");
        txtTotalCost.setText(formatterBd.format(bd));
    }

    private void loadPayments() {
        try {
            Double payment = 0.00;
            ResultSet search = DB.search("SELECT * FROM payment WHERE order_id='" + txtOrderId.getText().toUpperCase() + "'");
            while (search.next()) {
                payment = payment + search.getDouble("amount");
                System.out.println(payment);
            }
            String setValue = String.valueOf(payment);
            BigDecimal bd = new BigDecimal(setValue);
            DecimalFormat formatterBd = new DecimalFormat("##.00");
            if (payment == 0.00) {
                txtCustomerPayment.setText("0.00");
            } else {
                txtCustomerPayment.setText(formatterBd.format(bd));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void calculateNAmount() {
        double customerPayment = Double.parseDouble(txtCustomerPayment.getText());
        double fullAmount = Double.parseDouble(txtIncome.getText());
        double netAmount = fullAmount - customerPayment;
        String setValue = String.valueOf(netAmount);
        BigDecimal bd = new BigDecimal(setValue);
        DecimalFormat formatterBd = new DecimalFormat("##.00");
        if (netAmount == 0.00) {
            txtNetAmount.setText("0.00");
            txtNetAmount.grabFocus();
        } else {
            txtNetAmount.setText(formatterBd.format(bd));
            txtNetAmount.grabFocus();
        }
    }

    private void endOrder() {
        if (!txtOrderId.getText().equals("")) {
            if (tb4.getRowCount() != 0) {
                try {
                    DB.getNewConnection().setAutoCommit(false);
                    Savepoint savepoint = DB.getNewConnection().setSavepoint();
                    try {
                        String date = new SimpleDateFormat("yyyy-MM-dd- HH:mm:ss").format(new Date());
                        String invitemSQL = "insert into end_job (order_id,total_amount,end_meter,data_time,employee_id,status) values('" + txtOrderId.getText().toUpperCase() + "','" + txtIncome.getText() + "','"+txtEndMeter.getText()+"','" + date + "','" + SystemData.getemployee() + "','" + 1 + "')";
                        DB.iud(invitemSQL);
                        DB.iud("update work_order set status='" + "0" + "' where order_id='" + txtOrderId.getText() + "'");
                        for (int row = 0; row < tb4.getRowCount(); row++) {
                            String costName = tb4.getValueAt(row, 0).toString().trim();
                            String amount = tb4.getValueAt(row, 1).toString().trim();
                            String invitemSQL1 = "insert into job_cost (order_id,cost_type,amount,data_time,status) values('" + txtOrderId.getText().toUpperCase() + "','" + costName + "','" + amount + "','" + date + "','" + 1 + "')";
                            DB.iud(invitemSQL1);
                        }
                        ResultSet search = DB.search("SELECT * FROM work_order WHERE order_id='"+txtOrderId.getText()+"'");
                        String orderDate=null;
                        if(search.next()){
                        orderDate=search.getString("data_time");
                        }
                         for (int row = 0; row < tb1.getRowCount(); row++) {
                            String employeeId = tb1.getValueAt(row, 0).toString().trim();
                            String amount = tb1.getValueAt(row, 3).toString().trim();
                            String invitemSQL2 = "insert into work_salary (employee_id,order_id,working_point,amount,order_date,data_time,add_employee,status) values('" + employeeId + "','" + txtOrderId.getText() + "','" + txtWpoint.getText() + "','" + amount + "','" + orderDate + "','"+date+"','"+SystemData.getemployee()+"','"+1+"')";
                            DB.iud(invitemSQL2);
                        }
                        double customerPayment = Double.parseDouble(txtCustomerPayment.getText());
                        double income = Double.parseDouble(txtIncome.getText());

                        System.out.println(customerPayment);
                        System.out.println(income);
                        if (txtCustomerPayment.getText().equals("0.00")) {
                            JOptionPane.showMessageDialog(this, "Successful End Order And Rs." + txtIncome.getText() + " Get Payments");
                        } else if (customerPayment == income) {
                            JOptionPane.showMessageDialog(this, "Successful End Order");
                        } else if (customerPayment < income) {
                            double val = income - customerPayment;
                            JOptionPane.showMessageDialog(this, "Successful End Order And Rs." + val + " Get Payments");
                        } else if (customerPayment > income) {
                            double val = customerPayment - income;
                            JOptionPane.showMessageDialog(this, "Successful End Order And Rs." + val + " Return Payments");
                        }
                        clearFeald();
                    } catch (Exception e) {
                        DB.getNewConnection().rollback(savepoint);
                        System.out.println(e);
                    }
                    DB.getNewConnection().commit();
                    DB.getNewConnection().setAutoCommit(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter cost for job", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please search job", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void clearFeald() {
        txtCustomerPayment.setText("0.00");
        txtTotalCost.setText("0.00");
        txtNetAmount.setText("0.00");
        txtCostName.setText(null);
        txtCustomer.setText(null);
        txtIncome.setText("Enter Total Bill Amount");
        txtVehicleNumber.setText(null);
        txtAmount.setText(null);
        txtOrderId.setText(null);
        txtEndMeter.setText(null);
        txtWpoint.setText(null);
        DefaultTableModel dtm = (DefaultTableModel) tb1.getModel();
        dtm.setRowCount(0);
        DefaultTableModel dtm1 = (DefaultTableModel) tb4.getModel();
        dtm1.setRowCount(0);
        txtOrderId.grabFocus();

    }

    private void frameSetting() {
        txtOrderId.grabFocus();
        CommonM.tableSettingSm(tb1);
        CommonM.tableSettingSm(tb4);
        jScrollPane1.setVisible(false);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        txtCustomer.setEditable(false);
        txtVehicleNumber.setEditable(false);
        txtCustomerPayment.setText("0.00");
        txtTotalCost.setText("0.00");
        txtNetAmount.setText("0.00");
        txtCustomerPayment.setEditable(false);
        txtTotalCost.setEditable(false);
        txtNetAmount.setEditable(false);
        txtEmployeeId.setEditable(false);
        txtIncome.setText("Enter Total Bill Amount");
    }

    private void salary() {
        try {
          DefaultTableModel dtm = (DefaultTableModel) tb1.getModel();
          dtm.setValueAt(txtDAmount.getText(), row, 3);
          
            DefaultTableModel dtm1 = (DefaultTableModel) tb4.getModel();
            dtm1.setRowCount(0);
            Vector v = new Vector();
            v.add("Driver Salary");
            v.add(saleryCost());
            dtm1.addRow(v);
            txtDAmount.setText(null);
            txtDAmount.grabFocus();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    
     private double saleryCost() {
        double amount = 0;
        for (int row = 0; row < tb1.getRowCount(); row++) {
            if(!tb1.getValueAt(row, 3).toString().trim().equals("Pending")){
            String amount1 = tb1.getValueAt(row, 3).toString().trim();
            double amount2 = Double.parseDouble(amount1);
            amount = amount + amount2;

            System.out.println(amount);
        }
        }
        
        return amount;
    }
}
