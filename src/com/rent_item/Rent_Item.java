/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rent_item;

import common.DB;
import common.CommonM;
import common.SystemData;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author geeth
 */
public class Rent_Item extends javax.swing.JFrame {

    /**
     * Creates new form Start_Job
     */
    public Rent_Item() {
        initComponents();
        txtCustomerId.grabFocus();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        CommonM.tableSettings(tb3);
        generateOrId();
        jScrollPane2.setVisible(false);
        jScrollPane3.setVisible(false);
        textFealds();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane2 = new javax.swing.JLayeredPane();
        ReForm = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        customerList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        ItemList = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        txtItemId = new javax.swing.JTextField();
        lbFirstName = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        txtCustomerId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtProductNumber = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiscription = new javax.swing.JTextArea();
        btnStart = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tb3 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        btnAddItem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLayeredPane2.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jLayeredPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ReForm.setBackground(new java.awt.Color(255, 255, 255));
        ReForm.setOpaque(true);
        ReForm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        customerList.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        customerList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(customerList);

        ReForm.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 450, 110));

        ItemList.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        ItemList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemListMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ItemListMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(ItemList);

        ReForm.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 450, 130));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel9.setText("Item Id");
        jLabel9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel9KeyPressed(evt);
            }
        });
        ReForm.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 175, 42));

        txtItemId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtItemId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtItemId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemIdActionPerformed(evt);
            }
        });
        txtItemId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtItemIdKeyTyped(evt);
            }
        });
        ReForm.add(txtItemId, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 450, 43));

        lbFirstName.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        lbFirstName.setText("Order Id");
        ReForm.add(lbFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 175, 42));

        txtOrderId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtOrderId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtOrderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderIdActionPerformed(evt);
            }
        });
        txtOrderId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOrderIdKeyTyped(evt);
            }
        });
        ReForm.add(txtOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 450, 43));

        txtCustomerId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCustomerId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCustomerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerIdActionPerformed(evt);
            }
        });
        txtCustomerId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustomerIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCustomerIdKeyTyped(evt);
            }
        });
        ReForm.add(txtCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 450, 43));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel1.setText("Customer Id/Name");
        ReForm.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 200, 43));

        jLabel5.setBackground(new java.awt.Color(204, 0, 51));
        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Rent Order");
        jLabel5.setOpaque(true);
        ReForm.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 69));

        txtProductNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtProductNumber.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtProductNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductNumberActionPerformed(evt);
            }
        });
        ReForm.add(txtProductNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, 450, 43));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel2.setText("Model");
        ReForm.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 190, 43));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel10.setText("discreption");
        ReForm.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 175, 42));

        txtDiscription.setColumns(20);
        txtDiscription.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        txtDiscription.setRows(5);
        txtDiscription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiscriptionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtDiscription);

        ReForm.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 450, 150));

        btnStart.setBackground(new java.awt.Color(0, 102, 204));
        btnStart.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 30)); // NOI18N
        btnStart.setForeground(new java.awt.Color(255, 255, 255));
        btnStart.setText("Start");
        btnStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnStartMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnStartMouseExited(evt);
            }
        });
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        ReForm.add(btnStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 730, 210, 60));

        tb3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Model", "Product Number", "Discription"
            }
        ));
        tb3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tb3MousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(tb3);

        ReForm.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 560, 660, 150));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel3.setText("Product Number");
        ReForm.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 175, 43));

        txtModel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtModel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelActionPerformed(evt);
            }
        });
        txtModel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtModelKeyTyped(evt);
            }
        });
        ReForm.add(txtModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 450, 43));

        btnAddItem.setBackground(new java.awt.Color(0, 102, 204));
        btnAddItem.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 30)); // NOI18N
        btnAddItem.setForeground(new java.awt.Color(255, 255, 255));
        btnAddItem.setText("Add Item");
        btnAddItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddItemMouseExited(evt);
            }
        });
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });
        ReForm.add(btnAddItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 500, 160, -1));

        jLayeredPane2.add(ReForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 750, 840));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 881, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtItemIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemIdActionPerformed

    }//GEN-LAST:event_txtItemIdActionPerformed

    private void txtItemIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIdKeyTyped

    }//GEN-LAST:event_txtItemIdKeyTyped

    private void txtOrderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderIdActionPerformed
        
    }//GEN-LAST:event_txtOrderIdActionPerformed

    private void txtOrderIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrderIdKeyTyped

    }//GEN-LAST:event_txtOrderIdKeyTyped

    private void txtCustomerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerIdActionPerformed
        txtOrderId.grabFocus();
    }//GEN-LAST:event_txtCustomerIdActionPerformed

    private void txtProductNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductNumberActionPerformed

    private void txtCustomerIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerIdKeyReleased
        if (evt.getKeyCode() == 107) {
            txtCustomerId.setText("");
            new Add_Customer_Rent_Item().setVisible(true);
            this.dispose();

        }
        searchPro();
    }//GEN-LAST:event_txtCustomerIdKeyReleased

    private void txtCustomerIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerIdKeyTyped

    }//GEN-LAST:event_txtCustomerIdKeyTyped

    private void tb3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb3MousePressed

    }//GEN-LAST:event_tb3MousePressed

    private void btnStartMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStartMouseEntered

    private void btnStartMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStartMouseExited

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed

        startOrder();
    }//GEN-LAST:event_btnStartActionPerformed

    private void customerListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerListMouseClicked
        if (evt.getClickCount() == 2) {
            txtCustomerId.setText(customerList.getSelectedValue().split("-")[0]);
            jScrollPane2.setVisible(false);

        }
    }//GEN-LAST:event_customerListMouseClicked

    private void jLabel9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel9KeyPressed

    }//GEN-LAST:event_jLabel9KeyPressed

    private void txtItemIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIdKeyReleased
        searchItem();
    }//GEN-LAST:event_txtItemIdKeyReleased

    private void ItemListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemListMouseClicked
        if (evt.getClickCount() == 2) {
            try {
                boolean b = true;
                ResultSet search = DB.search("SELECT * FROM rent_order_item WHERE item_id='"+ItemList.getSelectedValue().split("-")[0].split(":")[0].trim()+"' AND status=1");
                while(search.next()){
                 JOptionPane.showMessageDialog(this, "This item alredy rent", "Error", JOptionPane.ERROR_MESSAGE);
                 txtItemId.setText(null);
                 txtItemId.grabFocus();
                 jScrollPane3.setVisible(false); 
                 b=false;
                }
                if(b){
                   txtItemId.setText(ItemList.getSelectedValue().split(":")[0]);
                   searchDetails();
                   txtDiscription.grabFocus();
                    jScrollPane3.setVisible(false);     
               
                }else{
                b=true;
                }
                

                
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_ItemListMouseClicked

    private void ItemListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemListMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemListMouseEntered

    private void txtModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelActionPerformed

    private void txtModelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModelKeyTyped

    }//GEN-LAST:event_txtModelKeyTyped

    private void txtDiscriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscriptionKeyReleased
        
    }//GEN-LAST:event_txtDiscriptionKeyReleased

    private void btnAddItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddItemMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddItemMouseEntered

    private void btnAddItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddItemMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddItemMouseExited

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        if(!txtItemId.getText().equals("")){
        if(!txtModel.getText().equals("")){
             addTbData();
             clearFealds();

        }
        }
        
       
    }//GEN-LAST:event_btnAddItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rent_Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rent_Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rent_Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rent_Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rent_Item().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ItemList;
    private javax.swing.JLayeredPane ReForm;
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnStart;
    private javax.swing.JList<String> customerList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lbFirstName;
    private javax.swing.JTable tb3;
    public static javax.swing.JTextField txtCustomerId;
    private javax.swing.JTextArea txtDiscription;
    public static javax.swing.JTextField txtItemId;
    private javax.swing.JTextField txtModel;
    public static javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtProductNumber;
    // End of variables declaration//GEN-END:variables
 private void generateOrId() {
        try {
            txtOrderId.setEditable(false);
            ResultSet rs = DB.search("select count(order_id) as x from rent_order");
            if (rs.next()) {
                String counts = rs.getString("x");
                int count = Integer.parseInt(counts);
                ++count;
                if (count < 10) {
                    txtOrderId.setText("RN00000" + count);
                } else if (count < 100) {
                    txtOrderId.setText("RN0000" + count);
                } else if (count < 1000) {
                    txtOrderId.setText("RN000" + count);
                } else if (count < 10000) {
                    txtOrderId.setText("RN00" + count);
                } else if (count < 100000) {
                    txtOrderId.setText("RN0" + count);
                } else if (count < 1000000) {
                    txtOrderId.setText("RN" + count);
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void searchPro() {
        try {
            if (!txtCustomerId.getText().trim().equals("")) {
                if (txtCustomerId.getText().toUpperCase().contains("CN")) {
                    ResultSet rs = DB.search("SELECT * FROM customer WHERE status=1 AND customer_id  LIKE '" + txtCustomerId.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane2.setVisible(false);
                    while (rs.next()) {
                        jScrollPane2.setVisible(true);
                        v.add(rs.getString("customer_id") + "-" + rs.getString("first_name") + " " + rs.getString("last_name") + "  -  " + rs.getString("nic_number"));
                    }
                    customerList.setListData(v);
                } else {
                    ResultSet rs = DB.search("SELECT * FROM customer WHERE first_name LIKE '" + txtCustomerId.getText().toUpperCase() + "%'or nic_number  LIKE '" + txtCustomerId.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane2.setVisible(false);
                    while (rs.next()) {
                        jScrollPane2.setVisible(true);
                        v.add(rs.getString("customer_id") + "-" + rs.getString("first_name") + " " + rs.getString("last_name") + "  -  " + rs.getString("nic_number"));
                    }
                    customerList.setListData(v);
                }
            } else {
                jScrollPane2.setVisible(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
     private void searchItem() {
        try {
            if (!txtItemId.getText().trim().equals("")) {
                if (txtItemId.getText().toUpperCase().contains("IT")) {
                    ResultSet rs = DB.search("SELECT * FROM rent_item WHERE status=1 And item_id LIKE '" + txtItemId.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane3.setVisible(false);
                    while (rs.next()) {
                        jScrollPane3.setVisible(true);
                        v.add(rs.getString("item_id") + "-" + rs.getString("name") + ":" + rs.getString("model"));
                    }
                    ItemList.setListData(v);
                } else {
                     ResultSet rs = DB.search("SELECT * FROM rent_item WHERE status=1 And name LIKE '" + txtItemId.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane3.setVisible(false);
                    while (rs.next()) {
                        jScrollPane3.setVisible(true);
                        v.add(rs.getString("item_id") + "-" + rs.getString("name") + ":" + rs.getString("model"));
                    }
                    ItemList.setListData(v);
                }
            } else {
                jScrollPane2.setVisible(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchDetails() {
        try {
            ResultSet search = DB.search("SELECT * FROM rent_item WHERE status=1 AND item_id='"+txtItemId.getText().toUpperCase().split("-")[0]+"'");
            if(search.next()){
            txtModel.setText(search.getString("model"));
            txtProductNumber.setText(search.getString("product_number"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void textFealds() {
        txtModel.setEditable(false);
        txtProductNumber.setEditable(false);
        btnStart.setEnabled(false);
    }

    private void addTbData() {
            DefaultTableModel dtm1 = (DefaultTableModel) tb3.getModel();
            Vector v = new Vector();
            v.add(txtItemId.getText());
            v.add(txtModel.getText());
            if(txtProductNumber.getText().equals("")){
            v.add("None");
            }else{
            v.add(txtProductNumber.getText());
            }
             if(txtDiscription.getText().equals("")){
            v.add("None");
            }else{
            v.add(txtDiscription.getText());
            }
            dtm1.addRow(v);
            btnStart.setEnabled(true);
    }

    private void clearFealds() {
       txtItemId.setText(null);
       txtModel.setText(null);
       txtProductNumber.setText(null);
       txtDiscription.setText(null);
       
    }

    private void startOrder() {
        try {
             String dataTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
            DB.iud("INSERT INTO rent_order VALUES('"+txtOrderId.getText().toUpperCase()+"','"+txtCustomerId.getText().toUpperCase()+"','"+txtDiscription.getText()+"','"+dataTime+"','"+SystemData.getemployee()+"','"+1+"')");
              for (int row = 0; row < tb3.getRowCount(); row++) {
                            String itemId = tb3.getValueAt(row, 0).toString().trim().split("-")[0];
                            String invitemSQL2 = "insert into rent_order_item (order_id,item_id,status) values('" +txtOrderId.getText() + "','" + itemId + "','" + 1 + "')";
                            DB.iud(invitemSQL2);
                            clearFealds();
                            claerTable();
                        }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void claerTable() {
          DefaultTableModel dtm1 = (DefaultTableModel) tb3.getModel();
          dtm1.setRowCount(0);
          txtCustomerId.setText(null);
          txtOrderId.setText(null);
          generateOrId();
    }

   
}
