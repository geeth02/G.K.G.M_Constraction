package com.vehicle_management;

import common.CommonM;
import static common.CommonM.checkNull;
import common.DB;
import common.SystemData;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author geeth
 */
public class Vehicle_Repair extends javax.swing.JFrame {

    /**
     * Creates new form Start_Job
     */
    public Vehicle_Repair() {
        initComponents();
        generateOrId();
        jScrollPane2.setVisible(false);
        txtSearch.grabFocus();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        txtRegNumber.setEditable(false);
        CommonM.tableSettingSm(tb4);
        txtTotalAmount.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane2 = new javax.swing.JLayeredPane();
        ReForm = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        txtRegNumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiscription = new javax.swing.JTextArea();
        btnRegister3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtReplaceItem = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtRepairCharges = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        comboSearch = new javax.swing.JComboBox<>();
        lbFirstName1 = new javax.swing.JLabel();
        txtReapirDate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        tb4 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLayeredPane2.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jLayeredPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ReForm.setBackground(new java.awt.Color(255, 255, 255));
        ReForm.setOpaque(true);
        ReForm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        ReForm.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, 260, 130));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel9.setText("Repair Date");
        jLabel9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel9KeyPressed(evt);
            }
        });
        ReForm.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 175, 42));

        txtRegNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtRegNumber.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtRegNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegNumberActionPerformed(evt);
            }
        });
        txtRegNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRegNumberKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRegNumberKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRegNumberKeyTyped(evt);
            }
        });
        ReForm.add(txtRegNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 450, 43));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel1.setText("Registration Number");
        ReForm.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 210, 43));

        jLabel5.setBackground(new java.awt.Color(204, 0, 51));
        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Vehicle Repair");
        jLabel5.setOpaque(true);
        ReForm.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 69));

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPrice.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtPrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtPriceMouseReleased(evt);
            }
        });
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });
        ReForm.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 380, 450, 43));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel2.setText("Replace Item");
        ReForm.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 190, 43));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel10.setText("discreption");
        ReForm.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 640, 175, 42));

        txtDiscription.setColumns(20);
        txtDiscription.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        txtDiscription.setRows(5);
        txtDiscription.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtDiscriptionMouseReleased(evt);
            }
        });
        txtDiscription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiscriptionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtDiscription);

        ReForm.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 640, 450, 150));

        btnRegister3.setBackground(new java.awt.Color(0, 102, 204));
        btnRegister3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 30)); // NOI18N
        btnRegister3.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister3.setText("Submit");
        btnRegister3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRegister3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegister3MouseExited(evt);
            }
        });
        btnRegister3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegister3ActionPerformed(evt);
            }
        });
        ReForm.add(btnRegister3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 810, 210, 60));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel3.setText("Price");
        ReForm.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 175, 43));

        txtReplaceItem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtReplaceItem.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtReplaceItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtReplaceItemMouseReleased(evt);
            }
        });
        txtReplaceItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReplaceItemActionPerformed(evt);
            }
        });
        txtReplaceItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtReplaceItemKeyTyped(evt);
            }
        });
        ReForm.add(txtReplaceItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 330, 450, 43));

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel11.setText("Repair Charges");
        jLabel11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel11KeyPressed(evt);
            }
        });
        ReForm.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 175, 42));

        txtRepairCharges.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtRepairCharges.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtRepairCharges.setOpaque(false);
        txtRepairCharges.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtRepairChargesMouseReleased(evt);
            }
        });
        txtRepairCharges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRepairChargesActionPerformed(evt);
            }
        });
        txtRepairCharges.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRepairChargesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRepairChargesKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRepairChargesKeyTyped(evt);
            }
        });
        ReForm.add(txtRepairCharges, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 450, 43));

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });
        ReForm.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 80, 260, 43));

        comboSearch.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Reg Number", "Vehicle Id", "Model" }));
        comboSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSearchActionPerformed(evt);
            }
        });
        ReForm.add(comboSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 170, 40));

        lbFirstName1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        lbFirstName1.setText("Search By");
        ReForm.add(lbFirstName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 170, 42));

        txtReapirDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtReapirDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtReapirDateMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtReapirDateMouseReleased(evt);
            }
        });
        ReForm.add(txtReapirDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 450, 40));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel4.setText("Id");
        ReForm.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 210, 43));

        txtId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });
        ReForm.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 450, 43));

        tb4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Price"
            }
        ));
        tb4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tb4MousePressed(evt);
            }
        });
        tb4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tb4KeyReleased(evt);
            }
        });
        jScrollPane8.setViewportView(tb4);

        ReForm.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 430, 450, 150));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel6.setText("Total Amount");
        ReForm.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 590, 175, 43));

        txtTotalAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTotalAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtTotalAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtTotalAmountMouseReleased(evt);
            }
        });
        txtTotalAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalAmountActionPerformed(evt);
            }
        });
        ReForm.add(txtTotalAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 590, 450, 43));

        jLayeredPane2.add(ReForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 750, 890));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtRegNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegNumberActionPerformed

    }//GEN-LAST:event_txtRegNumberActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
      if(!txtPrice.getText().equals("")){
      txtReplaceItem.grabFocus();
       dataAdd();
       costCalculate();
      }
     
    
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtRegNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRegNumberKeyReleased

    }//GEN-LAST:event_txtRegNumberKeyReleased

    private void txtRegNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRegNumberKeyTyped

    }//GEN-LAST:event_txtRegNumberKeyTyped

    private void btnRegister3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister3MouseEntered

    private void btnRegister3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister3MouseExited

    private void btnRegister3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegister3ActionPerformed
        try {
               if(!txtSearch.getText().equals("")){
                   ResultSet search = DB.search("SELECT * FROM vehicle WHERE vehicle_id='"+txtSearch.getText().toUpperCase()+"'");
            if(search.next()){
            addData();
            }else{
             JOptionPane.showMessageDialog(this, "Invalid Vehicle Id", "Error", JOptionPane.ERROR_MESSAGE);
             txtSearch.setText(null);
             txtSearch.grabFocus();
             
            }
        }
        } catch (Exception e) {
            e.printStackTrace();
        }
     
    }//GEN-LAST:event_btnRegister3ActionPerformed

    private void jLabel9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel9KeyPressed

    }//GEN-LAST:event_jLabel9KeyPressed

    private void txtReplaceItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReplaceItemActionPerformed
         checkNull(txtReplaceItem,"Next Service",txtPrice);
    }//GEN-LAST:event_txtReplaceItemActionPerformed

    private void txtReplaceItemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReplaceItemKeyTyped

    }//GEN-LAST:event_txtReplaceItemKeyTyped

    private void txtRegNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRegNumberKeyPressed

    }//GEN-LAST:event_txtRegNumberKeyPressed

    private void txtReplaceItemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtReplaceItemMouseReleased
         if(txtSearch.getText().equals("")){
       txtSearch.grabFocus();
       }else if(txtRepairCharges.getText().equals("")){
       txtRepairCharges.grabFocus();
       }
    }//GEN-LAST:event_txtReplaceItemMouseReleased

    private void txtPriceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPriceMouseReleased
       if(txtSearch.getText().equals("")){
       txtSearch.grabFocus();
       }else if(txtRepairCharges.getText().equals("")){
       txtRepairCharges.grabFocus();
       }else if(txtReplaceItem.getText().equals("")){
       txtReplaceItem.grabFocus();
       }
    }//GEN-LAST:event_txtPriceMouseReleased

    private void txtDiscriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscriptionKeyReleased

    }//GEN-LAST:event_txtDiscriptionKeyReleased

    private void txtDiscriptionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDiscriptionMouseReleased


    }//GEN-LAST:event_txtDiscriptionMouseReleased

    private void jLabel11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel11KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel11KeyPressed

    private void txtRepairChargesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRepairChargesMouseReleased
      if(txtSearch.getText().equals("")){
       txtSearch.grabFocus();
       }
    }//GEN-LAST:event_txtRepairChargesMouseReleased

    private void txtRepairChargesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRepairChargesActionPerformed
        checkNull(txtRepairCharges,"Next Service",txtReplaceItem);
        if(!txtRepairCharges.getText().equals("")){
           txtRepairCharges.setText(decimal(Double.parseDouble(txtRepairCharges.getText())));
        }
    }//GEN-LAST:event_txtRepairChargesActionPerformed

    private void txtRepairChargesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRepairChargesKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRepairChargesKeyPressed

    private void txtRepairChargesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRepairChargesKeyReleased
      
    }//GEN-LAST:event_txtRepairChargesKeyReleased

    private void txtRepairChargesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRepairChargesKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRepairChargesKeyTyped

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (evt.getClickCount() == 2) {
             comboSearch.setSelectedIndex(1);
             String vehicleId=jList1.getSelectedValue().split(":")[0];
             txtSearch.setText(vehicleId);
            searchDetails(vehicleId);
            txtReapirDate.grabFocus();
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == 10) {
                  comboSearch.setSelectedIndex(1);
             String vehicleId=jList1.getSelectedValue().split(":")[0];
             txtSearch.setText(vehicleId);
            searchDetails(vehicleId);
            txtReapirDate.grabFocus();
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        searchVehicle();
        if (evt.getKeyCode() == 40) {
            jList1.setSelectedIndex(0);
            jList1.grabFocus();
        }
        if (txtSearch.getText().equals("")) {

        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyTyped

    private void comboSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSearchActionPerformed
       jScrollPane2.setVisible(false);
       jScrollPane2.removeAll();
       txtSearch.setText(null);
       txtSearch.grabFocus();
    }//GEN-LAST:event_comboSearchActionPerformed

    private void txtReapirDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtReapirDateMouseClicked
    
        
      
    }//GEN-LAST:event_txtReapirDateMouseClicked

    private void txtReapirDateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtReapirDateMouseReleased
          if( txtSearch.getText().equals("")){
               txtReapirDate.setDate(null);
       txtSearch.grabFocus();
      
       }
    }//GEN-LAST:event_txtReapirDateMouseReleased

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdKeyPressed

    private void txtIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdKeyReleased

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdKeyTyped

    private void tb4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb4MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tb4MousePressed

    private void tb4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb4KeyReleased
        if (evt.getKeyCode() == 127) {
            int row = tb4.getSelectedRow();
            System.out.println(row);
            DefaultTableModel dtm = (DefaultTableModel) tb4.getModel();
            dtm.removeRow(row);
         

        }
    }//GEN-LAST:event_tb4KeyReleased

    private void txtTotalAmountMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTotalAmountMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalAmountMouseReleased

    private void txtTotalAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalAmountActionPerformed

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPriceKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vehicle_Repair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vehicle_Repair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vehicle_Repair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vehicle_Repair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vehicle_Repair().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane ReForm;
    private javax.swing.JButton btnRegister3;
    public static javax.swing.JComboBox<String> comboSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane2;
    public static javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lbFirstName1;
    private javax.swing.JTable tb4;
    private javax.swing.JTextArea txtDiscription;
    public static javax.swing.JTextField txtId;
    private javax.swing.JTextField txtPrice;
    private com.toedter.calendar.JDateChooser txtReapirDate;
    public static javax.swing.JTextField txtRegNumber;
    public static javax.swing.JTextField txtRepairCharges;
    private javax.swing.JTextField txtReplaceItem;
    public static javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTotalAmount;
    // End of variables declaration//GEN-END:variables

    private void searchVehicle() {
        try {

            if (!txtSearch.getText().trim().equals("")) {
                if (comboSearch.getSelectedItem().equals("Reg Number")) {
                    ResultSet rs = DB.search("SELECT * FROM vehicle WHERE status=1 AND registration_number  LIKE '" + txtSearch.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane2.setVisible(false);
                    while (rs.next()) {
                        jScrollPane2.setVisible(true);
                        v.add(rs.getString("vehicle_id") + ": " + rs.getString("registration_number") + "  -  " + rs.getString("model"));
                    }
                    jList1.setListData(v);
                } else if (comboSearch.getSelectedItem().equals("Vehicle Id")) {
                    ResultSet rs = DB.search("SELECT * FROM vehicle WHERE status=1 AND vehicle_id  LIKE '" + txtSearch.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane2.setVisible(false);
                    while (rs.next()) {
                        jScrollPane2.setVisible(true);
                        v.add(rs.getString("vehicle_id") + ": " + rs.getString("registration_number") + "  -  " + rs.getString("model"));
                    }
                    jList1.setListData(v);
                } else if (comboSearch.getSelectedItem().equals("Model")) {
                          ResultSet rs = DB.search("SELECT * FROM vehicle WHERE status=1 AND model  LIKE '" + txtSearch.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane2.setVisible(false);
                    while (rs.next()) {
                        jScrollPane2.setVisible(true);
                        v.add(rs.getString("vehicle_id") + ": " + rs.getString("registration_number") + "  -  " + rs.getString("model"));
                    }
                    jList1.setListData(v);
                }
            } else {
                jScrollPane2.setVisible(false);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchDetails(String vehicleId) {
        try {
            ResultSet search = DB.search("SELECT * FROM vehicle WHERE status=1 AND vehicle_id='"+vehicleId+"'");
            if(search.next()){
            txtRegNumber.setText(search.getString("province")+" "+search.getString("registration_number"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    
    }

    private void addData() {
        try {
             String date = new SimpleDateFormat("yyyy-MM-dd- HH:mm:ss").format(new Date());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String reapirDate =sdf.format(txtReapirDate.getDate());
            String description = null;
            if(txtDiscription.getText().equals("")){
            description="None";
            }else {
            description=txtDiscription.getText();
            }
           DB.iud("INSERT INTO vehicle_repair VALUES('"+txtId.getText()+"','"+txtSearch.getText()+"','"+reapirDate+"','"+txtRepairCharges.getText()+"','"+txtDiscription.getText()+"','"+date+"','"+SystemData.getemployee()+"','"+1+"')");
              for (int row = 0; row < tb4.getRowCount(); row++) {
                            String itemName = tb4.getValueAt(row, 0).toString().trim();
                            String price = tb4.getValueAt(row, 1).toString().trim();
                            String invitemSQL2 = "insert into replace_item_repair (repair_id,item_name,price,status) values('" + txtId.getText()+ "','" + itemName + "','" + price + "','"+1+"')";
                            DB.iud(invitemSQL2);
                        }
            clearFeald();
             JOptionPane.showMessageDialog(this, " successfull");
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clearFeald() {
        txtDiscription.setText(null);
        txtReplaceItem.setText(null);
        txtRepairCharges.setText(null);
        txtRegNumber.setText(null);
        txtSearch.setText(null);
        txtPrice.setText(null);
        txtReapirDate.setDate(null);
        txtTotalAmount.setText(null);
        DefaultTableModel dtm = (DefaultTableModel) tb4.getModel();
        dtm.setRowCount(0);
        generateOrId();
    }
 private void generateOrId() {
        try {
            txtId.setEditable(false);
            ResultSet rs = DB.search("select count(id) as x from vehicle_repair");
            if (rs.next()) {
                String counts = rs.getString("x");
                int count = Integer.parseInt(counts);
                ++count;
                if (count < 10) {
                    txtId.setText("RP00000" + count);
                } else if (count < 100) {
                    txtId.setText("RP0000" + count);
                } else if (count < 1000) {
                    txtId.setText("RP000" + count);
                } else if (count < 10000) {
                    txtId.setText("RP00" + count);
                } else if (count < 100000) {
                    txtId.setText("RP0" + count);
                } else if (count < 1000000) {
                    txtId.setText("RP" + count);
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
 
 
     private void dataAdd() {
        DefaultTableModel dtm = (DefaultTableModel) tb4.getModel();
        Vector v = new Vector();
        v.add(txtReplaceItem.getText().toUpperCase());
        v.add(decimal(Double.parseDouble(txtPrice.getText())));
        dtm.addRow(v);
        clearCostFeald();
    }

    private void clearCostFeald() {
        txtReplaceItem.setText("");
        txtPrice.setText("");
    }
    
     private String decimal(double price) {
        String setValue = String.valueOf(price);
        BigDecimal bd = new BigDecimal(setValue);
        DecimalFormat formatterBd = new DecimalFormat("##.00");
        return formatterBd.format(bd);
    }
     
         private void costCalculate() {
        double amount = Double.parseDouble(txtRepairCharges.getText());
        for (int row = 0; row < tb4.getRowCount(); row++) {
            String amount1 = tb4.getValueAt(row, 1).toString().trim();
            double amount2 = Double.parseDouble(amount1);
            amount = amount + amount2;
        }
        String setValue = String.valueOf(amount);
        BigDecimal bd = new BigDecimal(setValue);
        DecimalFormat formatterBd = new DecimalFormat("##.00");
        txtTotalAmount.setText(formatterBd.format(bd));
    }
}
