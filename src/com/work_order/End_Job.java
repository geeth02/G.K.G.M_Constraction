/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.work_order;

import common.CommonM;
import common.DB;
import common.SystemData;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.Savepoint;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author geeth
 */
public class End_Job extends javax.swing.JFrame {

    /**
     * Creates new form End_Job
     */
    public End_Job() {
        initComponents();
        txtOrderId.grabFocus();
        CommonM.tableSettingSm(tb1);
        CommonM.tableSettingSm(tb4);
        jScrollPane1.setVisible(false);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        txtCustomer.setEditable(false);
        txtVehicleNumber.setEditable(false);
        txtCustomerPayment.setText("0.00");
        txtTotalCost.setText("0.00");
        txtNetAmount.setText("0.00");
        txtCustomerPayment.setEditable(false);
        txtTotalCost.setEditable(false);
        txtNetAmount.setEditable(false);

        txtIncome.setText("Enter Total Bill Amount");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        ReForm = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        btnRegister3 = new javax.swing.JButton();
        txtIncome = new javax.swing.JTextField();
        txtVehicleNumber = new javax.swing.JTextField();
        lbFirstName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tb4 = new javax.swing.JTable();
        btnRegister4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTotalCost = new javax.swing.JTextField();
        comboSearch = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtCustomer = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtCostName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNetAmount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCustomerPayment = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLayeredPane1.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ReForm.setBackground(new java.awt.Color(255, 255, 255));
        ReForm.setOpaque(true);
        ReForm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        ReForm.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 300, 120));

        jLabel5.setBackground(new java.awt.Color(204, 0, 51));
        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("End work order");
        jLabel5.setOpaque(true);
        ReForm.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 69));

        btnRegister3.setBackground(new java.awt.Color(0, 102, 204));
        btnRegister3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 30)); // NOI18N
        btnRegister3.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister3.setText("End");
        btnRegister3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRegister3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegister3MouseExited(evt);
            }
        });
        btnRegister3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegister3ActionPerformed(evt);
            }
        });
        ReForm.add(btnRegister3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1181, 671, 210, 60));

        txtIncome.setBackground(new java.awt.Color(255, 255, 102));
        txtIncome.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtIncome.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtIncome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIncomeMouseClicked(evt);
            }
        });
        txtIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIncomeActionPerformed(evt);
            }
        });
        txtIncome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIncomeKeyTyped(evt);
            }
        });
        ReForm.add(txtIncome, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 632, 480, 43));

        txtVehicleNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtVehicleNumber.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtVehicleNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVehicleNumberActionPerformed(evt);
            }
        });
        ReForm.add(txtVehicleNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 130, 480, 40));

        lbFirstName.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        lbFirstName.setText("Search By");
        ReForm.add(lbFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 170, 42));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel3.setText("Total Bill Amount");
        ReForm.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 632, 190, 40));

        txtOrderId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtOrderId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtOrderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderIdActionPerformed(evt);
            }
        });
        txtOrderId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOrderIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOrderIdKeyTyped(evt);
            }
        });
        ReForm.add(txtOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 80, 300, 43));

        txtAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });
        ReForm.add(txtAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 385, 190, 43));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel9.setText("Vehicle Number");
        ReForm.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 175, 42));

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee Id", "NIC Number", "Name"
            }
        ));
        tb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tb1MousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(tb1);

        ReForm.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, 480, 120));

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel14.setText("Amount");
        ReForm.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 383, 101, 40));

        tb4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cost Name", "Amount"
            }
        ));
        tb4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tb4MousePressed(evt);
            }
        });
        tb4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tb4KeyReleased(evt);
            }
        });
        jScrollPane8.setViewportView(tb4);

        ReForm.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 444, 480, 120));

        btnRegister4.setBackground(new java.awt.Color(0, 102, 204));
        btnRegister4.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 30)); // NOI18N
        btnRegister4.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister4.setText("End");
        btnRegister4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRegister4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegister4MouseExited(evt);
            }
        });
        btnRegister4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegister4ActionPerformed(evt);
            }
        });
        ReForm.add(btnRegister4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 770, 210, 60));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel4.setText("Total Cost");
        ReForm.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 576, -1, 40));

        txtTotalCost.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTotalCost.setForeground(new java.awt.Color(204, 0, 0));
        txtTotalCost.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtTotalCost.setVerifyInputWhenFocusTarget(false);
        txtTotalCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalCostActionPerformed(evt);
            }
        });
        txtTotalCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTotalCostKeyTyped(evt);
            }
        });
        ReForm.add(txtTotalCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 578, 180, 43));

        comboSearch.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NIC Number", "Vehicle Number" }));
        ReForm.add(comboSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, -1, 40));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel10.setText("Customer");
        ReForm.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 175, 42));

        txtCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCustomer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerActionPerformed(evt);
            }
        });
        ReForm.add(txtCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 480, 40));

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel15.setText("Drivers");
        ReForm.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 101, 43));

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel16.setText("Work Cost");
        ReForm.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 381, 200, 45));

        txtCostName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCostName.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCostName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCostNameActionPerformed(evt);
            }
        });
        txtCostName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCostNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCostNameKeyTyped(evt);
            }
        });
        ReForm.add(txtCostName, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 385, 180, 43));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel6.setText("Net Amount");
        ReForm.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 690, 190, 40));

        txtNetAmount.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtNetAmount.setForeground(new java.awt.Color(204, 0, 0));
        txtNetAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtNetAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNetAmountActionPerformed(evt);
            }
        });
        txtNetAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNetAmountKeyTyped(evt);
            }
        });
        ReForm.add(txtNetAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 690, 480, 43));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel7.setText("Customer Payment");
        ReForm.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 576, -1, 40));

        txtCustomerPayment.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtCustomerPayment.setForeground(new java.awt.Color(0, 204, 0));
        txtCustomerPayment.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCustomerPayment.setVerifyInputWhenFocusTarget(false);
        txtCustomerPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerPaymentActionPerformed(evt);
            }
        });
        txtCustomerPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCustomerPaymentKeyTyped(evt);
            }
        });
        ReForm.add(txtCustomerPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 578, 180, 43));

        jLayeredPane1.add(ReForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 780, 870));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 859, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 941, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtVehicleNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVehicleNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVehicleNumberActionPerformed

    private void btnRegister3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister3MouseEntered

    private void btnRegister3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister3MouseExited

    private void btnRegister3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegister3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister3ActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        dataAdd();
        costCalculate();

    }//GEN-LAST:event_txtAmountActionPerformed

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountKeyTyped

    private void tb1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb1MousePressed

    }//GEN-LAST:event_tb1MousePressed

    private void txtAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyReleased
//            if(evt.getKeyCode()==107){
//     txtAmount.setText("");
//     new Add_Cost().setVisible(true);
//    dialogBoxMeker();
//     
//     }
    }//GEN-LAST:event_txtAmountKeyReleased

    private void txtOrderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderIdActionPerformed

    private void txtOrderIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrderIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderIdKeyTyped

    private void txtIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIncomeActionPerformed
        calculateNAmount();
    }//GEN-LAST:event_txtIncomeActionPerformed

    private void txtIncomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIncomeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIncomeKeyTyped

    private void tb4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb4MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tb4MousePressed

    private void btnRegister4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister4MouseEntered

    private void btnRegister4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister4MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister4MouseExited

    private void btnRegister4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegister4ActionPerformed
        endOrder();
    }//GEN-LAST:event_btnRegister4ActionPerformed

    private void txtOrderIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrderIdKeyReleased
        searchOrder();
        if (evt.getKeyCode() == 40) {
            jList1.setSelectedIndex(0);
            jList1.grabFocus();
        }

    }//GEN-LAST:event_txtOrderIdKeyReleased

    private void txtTotalCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalCostActionPerformed

    }//GEN-LAST:event_txtTotalCostActionPerformed

    private void txtTotalCostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalCostKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalCostKeyTyped

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        try {
            if (evt.getClickCount() == 2) {
                jScrollPane1.setVisible(false);
                ResultSet search = DB.search("SELECT * FROM work_order WHERE status= 1 AND customer_id='" + jList1.getSelectedValue().split("-")[0] + "'");
                if (search.next()) {
                    searchDetails();
                    txtCostName.grabFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "This customer have not active job");
                    txtOrderId.setText("");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == 10) {
            try {
                jScrollPane1.setVisible(false);

                ResultSet search = DB.search("SELECT * FROM work_order WHERE status= 1 AND customer_id='" + jList1.getSelectedValue().split("-")[0] + "' or vehicle_id='" + jList1.getSelectedValue().split("-")[0] + "'");
                if (search.next()) {
                    searchDetails();
                    txtCostName.grabFocus();
                } else {
                    if (comboSearch.getSelectedItem().equals("NIC Number")) {
                        JOptionPane.showMessageDialog(this, "This customer have not active job");
                        txtOrderId.setText("");
                        txtOrderId.grabFocus();
                    } else {
                        JOptionPane.showMessageDialog(this, "This vehicle have not active job");
                        txtOrderId.setText("");
                        txtOrderId.grabFocus();
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void txtCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerActionPerformed

    private void txtCostNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostNameActionPerformed
        txtAmount.grabFocus();
    }//GEN-LAST:event_txtCostNameActionPerformed

    private void txtCostNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostNameKeyReleased

    private void txtCostNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostNameKeyTyped

    private void txtNetAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNetAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetAmountActionPerformed

    private void txtNetAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNetAmountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetAmountKeyTyped

    private void tb4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb4KeyReleased
        if (evt.getKeyCode() == 127) {
            int row = tb4.getSelectedRow();
            System.out.println(row);
            DefaultTableModel dtm = (DefaultTableModel) tb4.getModel();
            dtm.removeRow(row);
            costCalculate();
            txtCostName.grabFocus();

        }
    }//GEN-LAST:event_tb4KeyReleased

    private void txtCustomerPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerPaymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerPaymentActionPerformed

    private void txtCustomerPaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerPaymentKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerPaymentKeyTyped

    private void txtIncomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIncomeMouseClicked
        if (txtIncome.getText().equals("Enter Total Bill Amount")) {
            txtIncome.setText(null);
        }


    }//GEN-LAST:event_txtIncomeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(End_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(End_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(End_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(End_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new End_Job().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane ReForm;
    private javax.swing.JButton btnRegister3;
    private javax.swing.JButton btnRegister4;
    public static javax.swing.JComboBox<String> comboSearch;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    public static javax.swing.JList<String> jList1;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lbFirstName;
    public static javax.swing.JTable tb1;
    private javax.swing.JTable tb4;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCostName;
    public static javax.swing.JTextField txtCustomer;
    public static javax.swing.JTextField txtCustomerPayment;
    private javax.swing.JTextField txtIncome;
    private javax.swing.JTextField txtNetAmount;
    public static javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtTotalCost;
    public static javax.swing.JTextField txtVehicleNumber;
    // End of variables declaration//GEN-END:variables

    private void searchOrder() {
        try {
            if (!txtOrderId.getText().trim().equals("")) {
                if (comboSearch.getSelectedItem().equals("NIC Number")) {
                    ResultSet rs = DB.search("SELECT * FROM customer WHERE status=1 AND nic_number LIKE '" + txtOrderId.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane1.setVisible(false);
                    while (rs.next()) {
                        jScrollPane1.setVisible(true);
                        v.add(rs.getString("customer_id") + "-" + rs.getString("first_name") + " " + rs.getString("last_name"));
                        jList1.setListData(v);
                    }
                } else if (comboSearch.getSelectedItem().equals(("Vehicle Number"))) {
                    ResultSet rs = DB.search("SELECT * FROM vehicle WHERE status=1 AND registration_number LIKE '" + txtOrderId.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane1.setVisible(false);
                    while (rs.next()) {
                        jScrollPane1.setVisible(true);
                        v.add(rs.getString("vehicle_id") + "-" + rs.getString("model") + " " + rs.getString("registration_number"));
                    }
                    jList1.setListData(v);
                } else if (comboSearch.getSelectedItem().equals("Driver")) {
                    ResultSet rs = DB.search("SELECT * FROM employee WHERE status=1 AND first_name LIKE '" + txtOrderId.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane1.setVisible(false);
                    while (rs.next()) {
                        jScrollPane1.setVisible(true);
                        v.add(rs.getString("employee_id") + "-" + rs.getString("first_name") + " " + rs.getString("last_name"));
                    }
                    jList1.setListData(v);

                }
            } else {
                jScrollPane1.setVisible(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchDetails() {

        if (comboSearch.getSelectedItem().equals("NIC Number")) {
            searchNic();
        } else if (comboSearch.getSelectedItem().equals("Vehicle Number")) {
            searchVehicleN();
            loadPayments();
        }
        // jScrollPane2.setVisible(false);

    }

    private void searchNic() {
        try {
            String search = jList1.getSelectedValue().split("-")[0];
            int i = 0;
            ResultSet search1 = DB.search("SELECT * FROM work_order where customer_id='" + search + "' AND status=1");
            while (search1.next()) {
                i++;
            }
            if (i == 1) {

                ResultSet search3 = DB.search("SELECT * FROM work_order where customer_id='" + search + "' AND status=1");
                if (search3.next()) {
                    txtOrderId.setText(search3.getString("order_id"));
                    ResultSet search4 = DB.search("SELECT * FROM vehicle where vehicle_id='" + search3.getString("vehicle_id") + "' AND status=1");
                    if (search4.next()) {
                        txtVehicleNumber.setText(search4.getString("province") + " " + search4.getString("registration_number"));
                    }
                    ResultSet search7 = DB.search("SELECT * FROM customer where customer_id='" + search3.getString("customer_id") + "' AND status=1");
                    if (search7.next()) {
                        txtCustomer.setText(search7.getString("customer_id") + "-" + search7.getString("first_name") + " " + search7.getString("last_name"));
                    }

                    ResultSet search5 = DB.search("SELECT * FROM employee_job where order_id='" + search3.getString("order_id") + "' AND status=1");
                    DefaultTableModel dtm = (DefaultTableModel) tb1.getModel();
                    dtm.setRowCount(0);
                    while (search5.next()) {
                        Vector v = new Vector();
                        ResultSet search6 = DB.search("SELECT * FROM employee where employee_id='" + search5.getString("employee_id") + "'");
                        while (search6.next()) {
                            v.add(search6.getString("employee_id"));
                            v.add(search6.getString("nic_number"));
                            v.add(search6.getString("first_name") + " " + search6.getString("last_name"));
                            dtm.addRow(v);
                        }
                    }
                    jScrollPane1.setVisible(false);
                }
                loadPayments();
            } else if (i > 1) {
                new Job_Selection().setVisible(true);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchVehicleN() {
        try {
            String id = jList1.getSelectedValue().split("-")[0];
            ResultSet search2 = DB.search("SELECT * FROM work_order WHERE vehicle_id='" + id + "'");
            ResultSet search3 = DB.search("SELECT * FROM work_order where vehicle_id='" + id + "' AND status=1");
            if (search3.next()) {
                txtOrderId.setText(search3.getString("order_id"));
                ResultSet search4 = DB.search("SELECT * FROM vehicle where vehicle_id='" + search3.getString("vehicle_id") + "' AND status=1");
                if (search4.next()) {
                    txtVehicleNumber.setText(search4.getString("province") + " " + search4.getString("registration_number"));
                }
                ResultSet search7 = DB.search("SELECT * FROM customer where customer_id='" + search3.getString("customer_id") + "' AND status=1");
                if (search7.next()) {
                    txtCustomer.setText(search7.getString("customer_id") + "-" + search7.getString("first_name") + " " + search7.getString("last_name"));
                }

                ResultSet search5 = DB.search("SELECT * FROM employee_job where order_id='" + search3.getString("order_id") + "' AND status=1");
                DefaultTableModel dtm = (DefaultTableModel) tb1.getModel();
                dtm.setRowCount(0);
                while (search5.next()) {
                    Vector v = new Vector();
                    ResultSet search6 = DB.search("SELECT * FROM employee where employee_id='" + search5.getString("employee_id") + "'");
                    while (search6.next()) {
                        v.add(search6.getString("employee_id"));
                        v.add(search6.getString("nic_number"));
                        v.add(search6.getString("first_name") + " " + search6.getString("last_name"));
                        dtm.addRow(v);
                    }
                }
                jScrollPane1.setVisible(false);
            }

        } catch (Exception e) {
        }
    }

    private void dataAdd() {
        DefaultTableModel dtm = (DefaultTableModel) tb4.getModel();
        Vector v = new Vector();
        v.add(txtCostName.getText().toUpperCase());
        v.add(txtAmount.getText());
        dtm.addRow(v);
        clearCostFeald();
    }

    private void clearCostFeald() {
        txtAmount.setText(null);
        txtCostName.setText(null);
        txtCostName.grabFocus();

    }

    private void costCalculate() {
        double amount = 0;
        for (int row = 0; row < tb4.getRowCount(); row++) {
            String amount1 = tb4.getValueAt(row, 1).toString().trim();
            double amount2 = Double.parseDouble(amount1);
            amount = amount + amount2;

            System.out.println(amount);
        }
        String setValue = String.valueOf(amount);
        BigDecimal bd = new BigDecimal(setValue);
        DecimalFormat formatterBd = new DecimalFormat("##.00");
        txtTotalCost.setText(formatterBd.format(bd));
    }

    private void loadPayments() {
        try {
            Double payment = 0.00;
            ResultSet search = DB.search("SELECT * FROM payment WHERE order_id='" + txtOrderId.getText().toUpperCase() + "'");
            while (search.next()) {
                payment = payment + search.getDouble("amount");
                System.out.println(payment);
            }
            String setValue = String.valueOf(payment);
            BigDecimal bd = new BigDecimal(setValue);
            DecimalFormat formatterBd = new DecimalFormat("##.00");
            if (payment == 0.00) {
                txtCustomerPayment.setText("0.00");
            } else {
                txtCustomerPayment.setText(formatterBd.format(bd));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void calculateNAmount() {
        double customerPayment = Double.parseDouble(txtCustomerPayment.getText());
        double fullAmount = Double.parseDouble(txtIncome.getText());
        double netAmount = fullAmount - customerPayment;
        String setValue = String.valueOf(netAmount);
        BigDecimal bd = new BigDecimal(setValue);
        DecimalFormat formatterBd = new DecimalFormat("##.00");
        if (netAmount == 0.00) {
            txtNetAmount.setText("0.00");
            txtNetAmount.grabFocus();
        } else {
            txtNetAmount.setText(formatterBd.format(bd));
            txtNetAmount.grabFocus();
        }
    }

    private void endOrder() {
        if (!txtOrderId.getText().equals("")) {
            if (tb4.getRowCount() != 0) {
                try {
                    DB.getNewConnection().setAutoCommit(false);
                    Savepoint savepoint = DB.getNewConnection().setSavepoint();
                    try {
                        String date = new SimpleDateFormat("yyyy-MM-dd- HH:mm:ss").format(new Date());
                        String invitemSQL = "insert into end_job (order_id,total_amount,data_time,employee_id,status) values('" + txtOrderId.getText().toUpperCase() + "','" + txtIncome.getText() + "','" + date + "','" + SystemData.getemployee() + "','" + 1 + "')";
                        DB.iud(invitemSQL);
                        DB.iud("update work_order set status='" + "0" + "' where order_id='" + txtOrderId.getText() + "'");
                        for (int row = 0; row < tb4.getRowCount(); row++) {
                            String costName = tb4.getValueAt(row, 0).toString().trim();
                            String amount = tb4.getValueAt(row, 1).toString().trim();
                            String invitemSQL1 = "insert into job_cost (order_id,cost_type,amount,data_time,status) values('" + txtOrderId.getText().toUpperCase() + "','" + costName + "','" + amount + "','" + date + "','" + 1 + "')";
                            DB.iud(invitemSQL1);
                        }
                        double customerPayment = Double.parseDouble(txtCustomerPayment.getText());
                        double income = Double.parseDouble(txtIncome.getText());

                        System.out.println(customerPayment);
                        System.out.println(income);
                        if (txtCustomerPayment.getText().equals("0.00")) {
                            JOptionPane.showMessageDialog(this, "Successful End Order And Rs." + txtIncome.getText() + " Get Payments");
                        } else if (customerPayment == income) {
                            JOptionPane.showMessageDialog(this, "Successful End Order");
                        } else if (customerPayment < income) {
                            double val = income - customerPayment;
                            JOptionPane.showMessageDialog(this, "Successful End Order And Rs." + val + " Get Payments");
                        } else if (customerPayment > income) {
                            double val = customerPayment - income;
                            JOptionPane.showMessageDialog(this, "Successful End Order And Rs." + val + " Return Payments");
                        }
                        clearFeald();
                    } catch (Exception e) {
                        DB.getNewConnection().rollback(savepoint);
                        System.out.println(e);
                    }
                    DB.getNewConnection().commit();
                    DB.getNewConnection().setAutoCommit(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter cost for job", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please search job", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void clearFeald() {
        txtCustomerPayment.setText("0.00");
        txtTotalCost.setText("0.00");
        txtNetAmount.setText("0.00");
        txtCostName.setText(null);
        txtCustomer.setText(null);
        txtIncome.setText("Enter Total Bill Amount");
        txtVehicleNumber.setText(null);
        txtAmount.setText(null);
        txtOrderId.setText(null);
        DefaultTableModel dtm = (DefaultTableModel) tb1.getModel();
        dtm.setRowCount(0);
        DefaultTableModel dtm1 = (DefaultTableModel) tb4.getModel();
        dtm1.setRowCount(0);
        txtOrderId.grabFocus();

    }
}
