/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.delivery_item;

import com.customer_management.Add_Customer_Befor_Start;
import common.DB;
import common.CommonM;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author geeth
 */
public class Delete_order extends javax.swing.JFrame {

    /**
     * Creates new form Start_Job
     */
    public Delete_order() {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        CommonM.tableSettings(tb3);
        jScrollPane2.setVisible(false);
        feladSettings();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane2 = new javax.swing.JLayeredPane();
        ReForm = new javax.swing.JLayeredPane();
        comboSearch = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        lbFirstName1 = new javax.swing.JLabel();
        lbFirstName = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        txtCustomerId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnRegister3 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tb3 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtDileveryDate = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        txtDeliveryCharge = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLayeredPane2.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jLayeredPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ReForm.setBackground(new java.awt.Color(255, 255, 255));
        ReForm.setOpaque(true);
        ReForm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        comboSearch.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NIC Number", "Customer Name", "Order Id" }));
        ReForm.add(comboSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 150, 40));

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });
        ReForm.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 290, 43));

        jList1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        ReForm.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, 290, -1));

        lbFirstName1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        lbFirstName1.setText("Search By");
        ReForm.add(lbFirstName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 180, 42));

        lbFirstName.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        lbFirstName.setText("Order Id");
        ReForm.add(lbFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 175, 42));

        txtOrderId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtOrderId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtOrderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderIdActionPerformed(evt);
            }
        });
        txtOrderId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOrderIdKeyTyped(evt);
            }
        });
        ReForm.add(txtOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 450, 43));

        txtCustomerId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCustomerId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCustomerId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtCustomerIdMouseReleased(evt);
            }
        });
        txtCustomerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerIdActionPerformed(evt);
            }
        });
        txtCustomerId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustomerIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCustomerIdKeyTyped(evt);
            }
        });
        ReForm.add(txtCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, 450, 43));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel1.setText("Customer Id/Name");
        ReForm.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 200, 43));

        jLabel5.setBackground(new java.awt.Color(204, 0, 51));
        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Delete Order");
        jLabel5.setOpaque(true);
        ReForm.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 69));

        btnRegister3.setBackground(new java.awt.Color(0, 102, 204));
        btnRegister3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 30)); // NOI18N
        btnRegister3.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister3.setText("Delete");
        btnRegister3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRegister3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegister3MouseExited(evt);
            }
        });
        btnRegister3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegister3ActionPerformed(evt);
            }
        });
        ReForm.add(btnRegister3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 650, 210, 60));

        tb3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Material Name", "QTY", "Price"
            }
        ));
        tb3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tb3MousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(tb3);

        ReForm.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, 450, 200));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel4.setText("Delivery Date");
        ReForm.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 190, 43));

        txtDileveryDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtDileveryDateMouseReleased(evt);
            }
        });
        ReForm.add(txtDileveryDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 450, 40));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel7.setText("Delivery Charges");
        ReForm.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 190, 43));

        txtDeliveryCharge.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDeliveryCharge.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtDeliveryCharge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtDeliveryChargeMouseReleased(evt);
            }
        });
        txtDeliveryCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeliveryChargeActionPerformed(evt);
            }
        });
        ReForm.add(txtDeliveryCharge, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 450, 43));

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel8.setText("Location");
        ReForm.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 190, 43));

        txtLocation.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLocation.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtLocation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtLocationMouseReleased(evt);
            }
        });
        txtLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocationActionPerformed(evt);
            }
        });
        txtLocation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLocationKeyTyped(evt);
            }
        });
        ReForm.add(txtLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 450, 43));

        jLayeredPane2.add(ReForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 750, 840));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 881, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtOrderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderIdActionPerformed

    }//GEN-LAST:event_txtOrderIdActionPerformed

    private void txtOrderIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrderIdKeyTyped

    }//GEN-LAST:event_txtOrderIdKeyTyped

    private void txtCustomerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerIdActionPerformed

    }//GEN-LAST:event_txtCustomerIdActionPerformed

    private void txtCustomerIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerIdKeyReleased
        if (evt.getKeyCode() == 107) {
            txtCustomerId.setText("");
            new Add_Customer_Befor_Start().setVisible(true);
            this.dispose();
        }
        searchPro();
    }//GEN-LAST:event_txtCustomerIdKeyReleased

    private void txtCustomerIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerIdKeyTyped

    }//GEN-LAST:event_txtCustomerIdKeyTyped

    private void btnRegister3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister3MouseEntered

    private void btnRegister3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister3MouseExited

    private void btnRegister3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegister3ActionPerformed
     deleteOrder();    

    }//GEN-LAST:event_btnRegister3ActionPerformed

    private void tb3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb3MousePressed

    }//GEN-LAST:event_tb3MousePressed

    private void txtDeliveryChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeliveryChargeActionPerformed


    }//GEN-LAST:event_txtDeliveryChargeActionPerformed

    private void txtLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocationActionPerformed
     
    }//GEN-LAST:event_txtLocationActionPerformed

    private void txtLocationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLocationKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLocationKeyTyped

    private void txtCustomerIdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCustomerIdMouseReleased

    }//GEN-LAST:event_txtCustomerIdMouseReleased

    private void txtDileveryDateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDileveryDateMouseReleased
      

        
    }//GEN-LAST:event_txtDileveryDateMouseReleased

    private void txtLocationMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLocationMouseReleased
       
        
    }//GEN-LAST:event_txtLocationMouseReleased

    private void txtDeliveryChargeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDeliveryChargeMouseReleased
   
    }//GEN-LAST:event_txtDeliveryChargeMouseReleased

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed

    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        searchPro();
        if (evt.getKeyCode() == 40) {
            jList1.setSelectedIndex(0);
            jList1.grabFocus();
        }
        if (txtSearch.getText().equals("")) {
            clearFeald();
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped

    }//GEN-LAST:event_txtSearchKeyTyped

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (evt.getClickCount() == 2) {
            click();
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == 10) {
            click();
        }
    }//GEN-LAST:event_jList1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Delete_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Delete_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Delete_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Delete_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Delete_order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane ReForm;
    private javax.swing.JButton btnRegister3;
    public static javax.swing.JComboBox<String> comboSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane2;
    public static javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lbFirstName;
    private javax.swing.JLabel lbFirstName1;
    public static javax.swing.JTable tb3;
    public static javax.swing.JTextField txtCustomerId;
    public static javax.swing.JTextField txtDeliveryCharge;
    public static com.toedter.calendar.JDateChooser txtDileveryDate;
    public static javax.swing.JTextField txtLocation;
    public static javax.swing.JTextField txtOrderId;
    public static javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables


     private void click() {
        try {
            jScrollPane2.setVisible(false);
            if (comboSearch.getSelectedItem().equals("NIC Number")) {
                ResultSet search1 = DB.search("SELECT * FROM delivery_order WHERE status= 1 AND customer_id='" + jList1.getSelectedValue().split("-")[0] + "'");
                if (search1.next()) {
                    searchDetails(search1.getString("order_id"));
                } else {
                    JOptionPane.showMessageDialog(this, "This customer have not active job");
                    txtSearch.setText("");
                    txtSearch.grabFocus();
                }
            } else if (comboSearch.getSelectedItem().equals("Order Id")) {
                     String OrderId=jList1.getSelectedValue();
                    searchDetails(OrderId);

            } else if (comboSearch.getSelectedItem().equals("Customer Name")) {
                ResultSet search1 = DB.search("SELECT * FROM delivery_order WHERE status= 1 AND customer_id='" + jList1.getSelectedValue().split("-")[0] + "'");
                if (search1.next()) {
                    searchDetails(search1.getString("order_id"));
                } else {
                    JOptionPane.showMessageDialog(this, "This customer have not active job");
                    txtSearch.setText("");
                    txtSearch.grabFocus();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     
     
     
      
         private void searchPro() {
        try {
            if (!txtSearch.getText().trim().equals("")) {
                if (comboSearch.getSelectedItem().equals("NIC Number")) {
                    ResultSet rs = DB.search("SELECT * FROM customer WHERE status=1 AND nic_number LIKE '" + txtSearch.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane2.setVisible(false);
                    while (rs.next()) {
                        jScrollPane2.setVisible(true);
                        v.add(rs.getString("customer_id") + "-" + rs.getString("first_name") + " " + rs.getString("last_name"));
                        jList1.setListData(v);
                    }
                } else if (comboSearch.getSelectedItem().equals(("Order Id"))) {
                    ResultSet rs = DB.search("SELECT * FROM delivery_order WHERE status=1 AND order_id LIKE '" + txtSearch.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane2.setVisible(false);
                    while (rs.next()) {
                        jScrollPane2.setVisible(true);
                        v.add(rs.getString("order_id"));
                    }
                    jList1.setListData(v);
                } else if (comboSearch.getSelectedItem().equals("Customer Name")) {
                    ResultSet rs = DB.search("SELECT * FROM customer WHERE status=1 AND first_name LIKE '" + txtSearch.getText().toUpperCase() + "%'");
                    Vector v = new Vector();
                    jScrollPane2.setVisible(false);
                    while (rs.next()) {
                        jScrollPane2.setVisible(true);
                        v.add(rs.getString("customer_id") + "-" + rs.getString("first_name") + " " + rs.getString("last_name"));
                    }
                    jList1.setListData(v);

                }
            } else {
                jScrollPane2.setVisible(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
       
        private void searchDetails(String orderId) {
        try {
            String customerId = jList1.getSelectedValue().split("-")[0];
            ResultSet search4 = DB.search("SELECT * FROM delivery_order WHERE status=1 AND customer_id='" + customerId + "'");
            int i = 0;
            while (search4.next()) {
                i++;
            }
            if (i == 1) {
                ResultSet search = DB.search("SELECT * FROM delivery_order WHERE status=1 AND order_id='" + orderId + "'");
                if (search.next()) {
                    ResultSet search1 = DB.search("SELECT * FROM customer WHERE customer_id='" + search.getString("customer_id") + "'");
                    if (search1.next()) {
                        txtCustomerId.setText(search.getString("customer_id") + "-" + search1.getString("first_name") + " " + search1.getString("last_name"));
                        txtSearch.setText(search1.getString("nic_number"));
                        txtOrderId.setText(orderId);
                        comboSearch.setSelectedIndex(0);
                        txtDileveryDate.setDate(search.getDate("delivery_date"));
                        txtLocation.setText(search.getString("location"));
                        txtDeliveryCharge.setText("Rs."+search.getString("charges"));
                    }

                    ResultSet search2 = DB.search("SELECT * FROM delivery_item WHERE order_id='" + orderId + "'");
                    DefaultTableModel dtm = (DefaultTableModel) tb3.getModel();
                    dtm.setRowCount(0);
                    while (search2.next()) {
                        Vector v = new Vector();
             
                            v.add(search2.getString("material_name"));
                            v.add(search2.getString("qty"));
                            v.add(search2.getString("price"));
                            dtm.addRow(v);
                        
                    }
                }
            } else if (i > 1) {
                new Job_Selection_Delete_Delivery_Order().setVisible(true);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void feladSettings() {
       txtCustomerId.setEditable(false);
       txtDeliveryCharge.setEditable(false);
       txtDileveryDate.setEnabled(false);
       txtLocation.setEditable(false);
       txtOrderId.setEditable(false);
      tb3.setEnabled(false);
      txtSearch.grabFocus();
    }

    private void deleteOrder() {
        try {
            
            if(!txtOrderId.getText().equals("")){
            int input = JOptionPane.showConfirmDialog(null, "Do you want to delete this order?");
            if(input==0){
            DB.iud("UPDATE delivery_order SET status='"+2+"' WHERE order_id='"+txtOrderId.getText()+"'");
            DB.iud("UPDATE delivery_item SET status='"+2+"' WHERE order_id='"+txtOrderId.getText()+"'");
            clearFeald();
            }
            }else{
            JOptionPane.showMessageDialog(this, "Please search details", "Error", JOptionPane.ERROR_MESSAGE);
            }
                   
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clearFeald() {
       txtCustomerId.setText(null);
       txtDeliveryCharge.setText(null);
       txtDileveryDate.setDate(null);
       txtLocation.setText(null);
       txtOrderId.setText(null);
       txtSearch.setText(null);
       
       DefaultTableModel dtm = (DefaultTableModel) tb3.getModel();
       dtm.setRowCount(0);
    }

}
