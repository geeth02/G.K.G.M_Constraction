/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.work_order;

import common.CommonM;
import common.DB;
import common.SystemData;
import java.awt.Color;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author geeth
 */
public class Paymets extends javax.swing.JFrame {

    /**
     * Creates new form End_Job
     */
    public Paymets() {
        initComponents();
        generatePId();
        txtSearch.grabFocus();
        CommonM.tableSettingSm(tb1);
        jScrollPane1.setVisible(false);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        txtCustomer.setEditable(false);
        txtVehicleNumber.setEditable(false);
        txtCustomerPayment.setText("0.00");
        txtCustomerPayment.setEditable(false);
        txtOrderId.setEditable(false);
        txtNetAmount.setEditable(false);
        txtNetAmount.setText("0.00");
        btnClear.setVisible(false);

        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        ReForm = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        btnRegister3 = new javax.swing.JButton();
        txtVehicleNumber = new javax.swing.JTextField();
        lbFirstName = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        comboSearch = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtCustomer = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNetAmount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCustomerPayment = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtPaymentId = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        txtPayment = new javax.swing.JTextField();
        btnPay = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtbalance = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLayeredPane1.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ReForm.setBackground(new java.awt.Color(255, 255, 255));
        ReForm.setOpaque(true);
        ReForm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        ReForm.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 300, 140));

        jLabel5.setBackground(new java.awt.Color(204, 0, 51));
        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Payments");
        jLabel5.setOpaque(true);
        ReForm.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 69));

        btnRegister3.setBackground(new java.awt.Color(0, 102, 204));
        btnRegister3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 30)); // NOI18N
        btnRegister3.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister3.setText("End");
        btnRegister3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRegister3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegister3MouseExited(evt);
            }
        });
        btnRegister3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegister3ActionPerformed(evt);
            }
        });
        ReForm.add(btnRegister3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1181, 620, 210, 60));

        txtVehicleNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtVehicleNumber.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtVehicleNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVehicleNumberActionPerformed(evt);
            }
        });
        ReForm.add(txtVehicleNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 480, 40));

        lbFirstName.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        lbFirstName.setText("Search By");
        ReForm.add(lbFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 170, 42));

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });
        ReForm.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 80, 300, 43));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel9.setText("Vehicle Number");
        ReForm.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 226, 175, 42));

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Payment Id", "Amount", "Date"
            }
        ));
        tb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tb1MousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(tb1);

        ReForm.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 329, 480, 140));

        comboSearch.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        comboSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NIC Number", "Customer Name" }));
        ReForm.add(comboSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, -1, 40));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel10.setText("Customer Name");
        ReForm.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 276, 175, 42));

        txtCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCustomer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerActionPerformed(evt);
            }
        });
        ReForm.add(txtCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 276, 480, 40));

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel15.setText("Payment History");
        ReForm.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 339, 180, 43));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel6.setText("Availble Payments");
        ReForm.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 190, 40));

        txtNetAmount.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtNetAmount.setForeground(new java.awt.Color(204, 0, 0));
        txtNetAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtNetAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNetAmountActionPerformed(evt);
            }
        });
        txtNetAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNetAmountKeyTyped(evt);
            }
        });
        ReForm.add(txtNetAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 530, 480, 43));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel7.setText("Total Paid Amount");
        ReForm.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 481, -1, 40));

        txtCustomerPayment.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtCustomerPayment.setForeground(new java.awt.Color(0, 204, 0));
        txtCustomerPayment.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCustomerPayment.setVerifyInputWhenFocusTarget(false);
        txtCustomerPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerPaymentActionPerformed(evt);
            }
        });
        txtCustomerPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCustomerPaymentKeyTyped(evt);
            }
        });
        ReForm.add(txtCustomerPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 480, 480, 43));

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel11.setText("Payment Id");
        ReForm.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 175, 42));

        txtPaymentId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPaymentId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtPaymentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaymentIdActionPerformed(evt);
            }
        });
        ReForm.add(txtPaymentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 480, 40));

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel12.setText("Order Id");
        ReForm.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 183, 175, -1));

        txtOrderId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtOrderId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtOrderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderIdActionPerformed(evt);
            }
        });
        ReForm.add(txtOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 480, 40));

        jLayeredPane1.add(ReForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 780, 600));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel8.setText("Amount");

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel13.setText("Payment");

        txtAmount.setBackground(new java.awt.Color(255, 255, 102));
        txtAmount.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });

        txtPayment.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtPayment.setForeground(new java.awt.Color(204, 0, 0));
        txtPayment.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaymentActionPerformed(evt);
            }
        });
        txtPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPaymentKeyTyped(evt);
            }
        });

        btnPay.setBackground(new java.awt.Color(0, 102, 204));
        btnPay.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 30)); // NOI18N
        btnPay.setForeground(new java.awt.Color(255, 255, 255));
        btnPay.setText("Pay");
        btnPay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPayMouseExited(evt);
            }
        });
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel14.setText("Balance");

        txtbalance.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtbalance.setForeground(new java.awt.Color(204, 0, 0));
        txtbalance.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtbalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbalanceActionPerformed(evt);
            }
        });
        txtbalance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbalanceKeyTyped(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(0, 102, 204));
        btnClear.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 30)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnClearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearMouseExited(evt);
            }
        });
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)
                            .addComponent(txtbalance, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(43, 43, 43)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtbalance, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLayeredPane1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 630, 780, 280));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 963, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtVehicleNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVehicleNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVehicleNumberActionPerformed

    private void btnRegister3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister3MouseEntered

    private void btnRegister3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegister3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister3MouseExited

    private void btnRegister3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegister3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegister3ActionPerformed

    private void tb1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb1MousePressed

    }//GEN-LAST:event_tb1MousePressed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnPayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPayMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPayMouseEntered

    private void btnPayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPayMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPayMouseExited

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
       if(!txtOrderId.getText().equals("")){ 
           if(!txtAmount.getText().equals("")){
               if(!txtPayment.getText().equals("")){
                pay();
               }else{
                JOptionPane.showMessageDialog(this, "Please Enter Payment", "Error",JOptionPane.ERROR_MESSAGE); 
                txtPayment.grabFocus();
               }
           }else{
            JOptionPane.showMessageDialog(this, "Please Enter Amount", "Error",JOptionPane.ERROR_MESSAGE); 
            txtAmount.grabFocus();
           }
       }else{
       JOptionPane.showMessageDialog(this, "Please search job", "Error",JOptionPane.ERROR_MESSAGE); 
       txtSearch.grabFocus();
       }

    }//GEN-LAST:event_btnPayActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        searchOrder();
        System.out.println(evt.getKeyCode());
        if(evt.getKeyCode()==40){
        jList1.setSelectedIndex(0);
        jList1.grabFocus();
        }
      
    }//GEN-LAST:event_txtSearchKeyReleased

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if(evt.getClickCount()==2){
            jScrollPane1.setVisible(false);
            searchDetails();
          

            
        }  
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if(evt.getKeyCode()==10){
          jScrollPane1.setVisible(false);    
        searchDetails();
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void txtCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerActionPerformed

    private void txtNetAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNetAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetAmountActionPerformed

    private void txtNetAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNetAmountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetAmountKeyTyped

    private void txtCustomerPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerPaymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerPaymentActionPerformed

    private void txtCustomerPaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerPaymentKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerPaymentKeyTyped

    private void txtPaymentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaymentIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaymentIdActionPerformed

    private void txtOrderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderIdActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        txtPayment.grabFocus();
    }//GEN-LAST:event_txtAmountActionPerformed

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountKeyTyped

    private void txtPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaymentActionPerformed
            double paidAmount= Double.parseDouble(txtAmount.getText());
            double payment=Double.parseDouble(txtPayment.getText());
            double balance= payment-paidAmount;
             String setValue=String.valueOf(balance);
            BigDecimal bd = new BigDecimal( setValue ) ;
            DecimalFormat formatterBd = new DecimalFormat( "##.00" );
            txtbalance.setText(formatterBd.format( bd ) );
            
            
    }//GEN-LAST:event_txtPaymentActionPerformed

    private void txtPaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaymentKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaymentKeyTyped

    private void txtbalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbalanceActionPerformed

    private void txtbalanceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbalanceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbalanceKeyTyped

    private void btnClearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearMouseEntered

    private void btnClearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearMouseExited

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
      clearViewOnly();
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Paymets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Paymets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Paymets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Paymets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Paymets().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane ReForm;
    public static javax.swing.JButton btnClear;
    public static javax.swing.JButton btnPay;
    private javax.swing.JButton btnRegister3;
    public static javax.swing.JComboBox<String> comboSearch;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    public static javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lbFirstName;
    public static javax.swing.JTable tb1;
    public static javax.swing.JTextField txtAmount;
    public static javax.swing.JTextField txtCustomer;
    public static javax.swing.JTextField txtCustomerPayment;
    public static javax.swing.JTextField txtNetAmount;
    public static javax.swing.JTextField txtOrderId;
    public static javax.swing.JTextField txtPayment;
    public static javax.swing.JTextField txtPaymentId;
    public static javax.swing.JTextField txtSearch;
    public static javax.swing.JTextField txtVehicleNumber;
    public static javax.swing.JTextField txtbalance;
    // End of variables declaration//GEN-END:variables

    private void searchOrder() {
         try {
            if(!txtSearch.getText().trim().equals("")){
            if(comboSearch.getSelectedItem().equals("NIC Number")){
                ResultSet rs=  DB.search("SELECT * FROM customer WHERE status=1 AND nic_number LIKE '"+txtSearch.getText().toUpperCase()+"%'");
                Vector v = new Vector();
                       jScrollPane1.setVisible(false);
                while(rs.next()){
                     jScrollPane1.setVisible(true);
                        v.add(rs.getString("customer_id")+"-"+rs.getString("first_name")+" "+rs.getString("last_name"));
                          jList1.setListData(v);   
                }
            }else if(comboSearch.getSelectedItem().equals(("Customer Name"))){
                ResultSet rs=  DB.search("SELECT * FROM customer WHERE status=1 AND first_name LIKE '"+txtSearch.getText().toUpperCase()+"%'");
                Vector v = new Vector();
                 jScrollPane1.setVisible(false);
                while(rs.next()){
                    jScrollPane1.setVisible(true);
                        v.add(rs.getString("customer_id")+"-"+rs.getString("first_name")+" "+rs.getString("last_name"));
                }
                jList1.setListData(v);
            }
            }else{
             jScrollPane1.setVisible(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchDetails() {
    searchNic();
        }            
        private void generatePId() {
              try {
            ResultSet rs = DB.search("select count(payment_id) as x from payment");
            if(rs.next()){
                String counts = rs.getString("x");
                int count = Integer.parseInt(counts);
               ++count;
                if(count<10){
                txtPaymentId.setText("MN00000"+count);
                txtPaymentId.setEditable(false);
                }else if(count<100){
                 txtPaymentId.setText("MN0000"+count);
                txtPaymentId.setEditable(false);
                }else if(count<1000){
                txtPaymentId.setText("MN000"+count);
                txtPaymentId.setEditable(false);
                }else if(count<10000){
                txtPaymentId.setText("MN00"+count);
                txtPaymentId.setEditable(false);
                }else if(count<100000){
                txtPaymentId.setText("MN0"+count);
                txtPaymentId.setEditable(false);
                }else if(count<1000000){
                txtPaymentId.setText("MN"+count);
                txtPaymentId.setEditable(false);
                }
            }
            txtSearch.grabFocus();
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
     private void searchNic() {
                try {
                    String search=jList1.getSelectedValue().split("-")[0];
                    int i=0;
                    ResultSet search1 = DB.search("SELECT * FROM work_order where customer_id='"+search+"'");
                  while(search1.next()){ 
                  i++;
                  }
                  if(i==1){
                    ResultSet search3 = DB.search("SELECT * FROM work_order where customer_id='"+search+"'");
                  if(search3.next()){
                  txtOrderId.setText(search3.getString("order_id"));
                  ResultSet search4 = DB.search("SELECT * FROM vehicle where vehicle_id='"+search3.getString("vehicle_id")+"' AND status=1");
                  if(search4.next()){
                  txtVehicleNumber.setText(search4.getString("province")+" "+search4.getString("registration_number"));
                  }
                       ResultSet search7 = DB.search("SELECT * FROM customer where customer_id='"+search3.getString("customer_id")+"' AND status=1");
                       if(search7.next()){
                        txtSearch.setText(search7.getString("nic_number"));
                       txtCustomer.setText(search7.getString("customer_id")+"-"+search7.getString("first_name")+" "+search7.getString("last_name"));
                       }
                     ResultSet search5 = DB.search("SELECT * FROM payment where order_id='"+search3.getString("order_id")+"' AND status=1");
                    DefaultTableModel dtm =(DefaultTableModel) tb1.getModel();
                    dtm.setRowCount(0);
                    while(search5.next()){
                    Vector v = new Vector();
                    v.add(search5.getString("payment_id"));
                    v.add(search5.getString("amount"));
                    v.add(search5.getString("data_time"));
                    dtm.addRow(v);
                    }
                       calculate();
                       avPayment();
                     txtAmount.grabFocus();    
                  jScrollPane1.setVisible(false);
                  }
                  }else if(i>1){
                    new Job_Selection_Payment().setVisible(true);
                  }
                } catch (Exception e) {
                    e.printStackTrace();
                }
    }
     
      private  void calculate() {
        double pAmount=0;
        for(int row =0; row < tb1.getRowCount();row++){
            String pAmount1=tb1.getValueAt(row, 1).toString().trim();
            double pAmount2=Double.parseDouble(pAmount1);
            pAmount=pAmount+pAmount2;
            System.out.println(pAmount);
           }
             String setValue=String.valueOf(pAmount);
            BigDecimal bd = new BigDecimal( setValue ) ;
            DecimalFormat formatterBd = new DecimalFormat( "##.00" );
            txtCustomerPayment.setText(formatterBd.format( bd ) );
   }

    private void pay() {
        try {
            String dataTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
            DB.iud("INSERT INTO payment VALUES('"+txtPaymentId.getText()+"','"+txtOrderId.getText()+"','"+txtAmount.getText()+"','"+dataTime+"','"+SystemData.getemployee()+"','"+1+"')");
              ResultSet search5 = DB.search("SELECT * FROM payment where order_id='"+txtOrderId.getText()+"' AND status=1");
                    DefaultTableModel dtm =(DefaultTableModel) tb1.getModel();
                    dtm.setRowCount(0);
                    while(search5.next()){
                    Vector v = new Vector();
                    v.add(search5.getString("payment_id"));
                    v.add(search5.getString("amount"));
                    v.add(search5.getString("data_time"));
                    dtm.addRow(v);
                    }
                    calculate();
                  if(txtNetAmount.getText().equals("Panding Payments...........")){
                  txtNetAmount.setText("0.00");
                  }  
                 if(Double.parseDouble(txtCustomerPayment.getText())==Double.parseDouble(txtNetAmount.getText())){
                  JOptionPane.showMessageDialog(this,"Complite all payments.");                 
                 }else if(Double.parseDouble(txtCustomerPayment.getText())<Double.parseDouble(txtNetAmount.getText())){
                     double customerP= Double.parseDouble(txtCustomerPayment.getText());
                     double avPayment = Double.parseDouble(txtNetAmount.getText());
                 JOptionPane.showMessageDialog(this,"Seccessful");
                 }
                 clearTextFeald();
               
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clearTextFeald() {
      txtSearch.grabFocus();
      txtCustomerPayment.setText("0.00");
      txtNetAmount.setText("0.00");
      txtPaymentId.setText(null);
      txtOrderId.setText(null);
      txtVehicleNumber.setText(null);
      txtCustomer.setText(null);
      txtAmount.setText(null);
      txtbalance.setText(null);
      txtPayment.setText(null);
      txtSearch.setText(null);
      DefaultTableModel dtm1 =(DefaultTableModel) tb1.getModel();
      dtm1.setRowCount(0);
      generatePId();

        
        
        
    }

    private void avPayment() {
                  try {
              ResultSet search = DB.search("SELECT * FROM end_job WHERE order_id='"+txtOrderId.getText()+"'");
              if(search.next()){
              double fullPayment = search.getDouble("total_amount");
              double customerPayment = Double.parseDouble(txtCustomerPayment.getText());
              txtNetAmount.setText(String.valueOf(fullPayment-customerPayment));
              if(fullPayment==customerPayment){
                txtAmount.setEditable(false);
                txtPayment.setEditable(false);
                btnClear.setVisible(true);
                btnPay.setEnabled(false);
                txtPaymentId.setText("Complete Payment");
                txtPaymentId.setForeground(Color.red);
                txtbalance.setEditable(false);
                txtSearch.setEditable(false);
                JOptionPane.showMessageDialog(this,"All payments are Seccessful. View only Report");  
              }else{
               JOptionPane.showMessageDialog(this,"Total bill amount is Rs."+fullPayment);
              }
              }else{
              txtNetAmount.setText("Panding Payments...........");
              }

          } catch (Exception e) {
              e.printStackTrace();
          }
    }

    private void clearViewOnly() {
     clearTextFeald();
      txtPaymentId.setForeground(Color.BLACK);
             txtAmount.setEditable(true);
                txtPayment.setEditable(true);
                btnClear.setVisible(false);
                btnPay.setEnabled(true);
                txtbalance.setEditable(true);
                txtSearch.setEditable(true);
    }


}
